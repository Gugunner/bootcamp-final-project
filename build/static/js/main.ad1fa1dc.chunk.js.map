{"version":3,"sources":["Constants/app-constants.js","Shared/AppSession/app-context.js","Utils/services.js","Components/Map/map.js","Components/PieChart/pie.js","Components/TreemapChart/treemap-utils.js","Components/TreemapChart/treemap.js","Shared/Menu/appbar.js","Shared/Menu/menu.js","App.js","serviceWorker.js","index.js"],"names":["MAPBOX_API_URL","BootcampAppContext","createContext","undefined","BootcampFinalProjectContextProvider","props","useState","startupDir","setStartupDir","getStartupDirs","a","axios","get","then","jsonResponse","data","catch","e","alert","dir","Provider","value","world","addStartupInfoToCountry","feature","layer","name","properties","startupsFound","startups","filter","stp","hq","length","startupContent","i","bindPopup","filterStartupsLATAM","children","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","BootcampFinalProjectMap","state","lat","lng","zoom","minZoom","maxZoom","setState","MapStateHandler","useContext","position","Map","center","class","TileLayer","attribution","url","GeoJSON","onEachFeature","BootcampFinalProjectStartupTypePieChart","setData","isMounted","setIsMounted","pieRef","useRef","useEffect","startupSectorsCount","map","sector","reduce","acc","currentVal","idx","Array","isArray","foundIndex","findIndex","obj","newObj","count","slice","formatPercent","d3","remove","currentAngle","minimumStepAngle","Math","PI","f","val","pieArcData","d","newAngle","set","index","startAngle","endAngle","padAngle","svgWidth","current","clientWidth","total","margin","top","bottom","left","right","chartWidth","chartHeight","pie","append","attr","arcPie","innerRadius","outerRadius","padRadius","cornerRadius","selectAll","join","each","text","style","_d","centroid","toLocaleString","id","height","backgroundColor","ref","onlyUnique","self","indexOf","BootCampFinalProjectStartupTreemapChart","treemapChart","vcsByCountry","valHQ","trim","countriesValVCs","investors","split","inv","accHQ","countriesAccVCs","vcs","vcsByCountryForTreemap","Object","keys","key","parent","console","log","getAllVcsByCountry","svgHeight","clientHeight","svg","node","getBoundingClientRect","width","chart","dataset","root","parentId","sum","size","leaves","enter","x0","y0","x1","y1","useStyles","makeStyles","theme","flexGrow","menuButton","marginRight","spacing","title","colorPrimary","colorInherit","color","ButtonAppBar","toggleDrawer","classes","className","AppBar","Toolbar","Button","onClick","status","IconButton","edge","aria-label","Typography","variant","list","fullList","BootcampFinalProjectMenuDrawer","open","setOpen","event","Drawer","anchor","onClose","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","App","dataFetched","setDataFetched","Grid","container","itme","xs","item","md","padding","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ad1fa1dc.chunk.js","sourcesContent":["const acessToken = \"pk.eyJ1IjoiZ3VndW5uZXIiLCJhIjoiY2tjbWxoamwzMDJmajJ4cWtsNHN6NjJkNiJ9.gTU76mp1kS4Rn7Kh5h67EQ\";\nconst MAPBOX_API_URL = `https://api.mapbox.com/styles/v1/gugunner/ckdnjzx3i2ca61jmvld4f035x/tiles/256/{z}/{x}/{y}@2x?access_token=${acessToken}`;\n// const API_DEV_URL = \"http://localhost:5000/bootcamp-final-project/api/\";\nconst API_DEV_URL = \"https://bootcamp-final-project-app.herokuapp.com/bootcamp-final-project/api/\"\nexport {\n    acessToken,\n    MAPBOX_API_URL,\n    API_DEV_URL\n};","import React, {createContext, useState} from \"react\";\nimport world from \"../../Data/custom_world.geo.json\";\nimport { getAllStartups } from \"../../Utils/services\";\n\nexport const BootcampAppContext = createContext(undefined);\n\nconst BootcampFinalProjectContextProvider = (props) => {\n    const [startupDir, setStartupDir] = useState(() => []);\n\n    const filterStartupsLATAM = (feature, layer) => {\n        const { name } = feature.properties;\n        const startupsFound = startupDir.startups.filter(stp => stp.hq === name );\n        if(startupsFound.length > 0) {\n            let startupContent = \"\";\n            for(let i = 0; i < startupsFound.length; i++) {\n                const startupString = `<li>${startupsFound[i].name}</li>`;\n                startupContent += startupString;\n            }\n            startupContent = \"<ul>\"+startupContent+\"</ul>\"\n            layer.bindPopup(startupContent);\n        }\n    };\n\n    const addStartupInfoToCountry = (feature, layer) => {\n        filterStartupsLATAM(feature, layer);\n    };\n\n    const getStartupDirs = async() => {\n        const dir = await getAllStartups();\n        if(dir) {\n            setStartupDir(dir);\n        }\n    };\n\n    return (\n        <BootcampAppContext.Provider value={{\n            world,\n            addStartupInfoToCountry,\n            startupDir,\n            getStartupDirs\n        }}>\n            {props.children}\n        </BootcampAppContext.Provider>\n    )\n};\n\nexport default BootcampFinalProjectContextProvider;","import { API_DEV_URL } from \"../Constants/app-constants\";\nimport axios from \"axios\";\n\nexport const getAllStartups = () => {\n    return axios.get(`${API_DEV_URL}startups`).then(jsonResponse => {\n        return jsonResponse ? jsonResponse.data : false;\n    }).catch(e => {\n        alert(\"Startup directory could not be loaded\")\n    return false\n    });\n};\n\n","// @flow\nimport React, {useContext, useEffect, useState} from \"react\";\nimport { Map, TileLayer, GeoJSON } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { BootcampAppContext } from \"../../Shared/AppSession/app-context\";\n// import * as d3 from \"d3\";\nimport { MAPBOX_API_URL } from \"../../Constants/app-constants\";\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\nconst MapStateHandler = () => {\n    const [state, setState] = useState(() => ({\n        lat: -15.2307,\n        lng: -61.5887,\n        zoom: 3,\n        minZoom: 3,\n        maxZoom: 3\n    }));\n    return { state, setState};\n};\n\nconst BootcampFinalProjectMap = () => {\n    const { state } = MapStateHandler();\n    const { startupDir, world, addStartupInfoToCountry } = useContext(BootcampAppContext);\n    const position = [state.lat, state.lng];\n    return (\n        <Map center={position} zoom={state.zoom} maxZoom={state.maxZoom} class=\"project-map\">\n            <TileLayer\n                attribution='Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>'\n                url={MAPBOX_API_URL}\n            />\n            {\n                startupDir.startups ?\n                <GeoJSON data={world} onEachFeature={addStartupInfoToCountry}/> : \"\"\n            }\n\n        </Map>\n    )\n};\n\nexport default BootcampFinalProjectMap;","import React, {useContext, useEffect, useRef, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport d3Tip from \"d3-tip\";\nimport {BootcampAppContext} from \"../../Shared/AppSession/app-context\";\nconst BootcampFinalProjectStartupTypePieChart = () => {\n  const { startupDir } = useContext(BootcampAppContext);\n  const [data, setData] = useState(() => []);\n  const [isMounted, setIsMounted] = useState(() => false);\n  const pieRef = useRef();\n\n  useEffect(() => {\n    if(!isMounted) {\n      setIsMounted(true);\n    }\n  },[data]);\n\n  useEffect(() => {\n    if(startupDir.startups) {\n      const { startups } = startupDir;\n      const startupSectors =  startups.map(stp => stp.sector);\n      const startupSectorsCount = startupSectors.reduce((acc,currentVal,idx) => {\n        if(typeof acc !== \"string\" && Array.isArray(acc)) {\n          const foundIndex = acc.findIndex(obj => {\n            return obj.name === currentVal\n          });\n          if(foundIndex !== -1) {\n            const newObj = { name: acc[foundIndex].name, count: acc[foundIndex].count +1 };\n            return foundIndex === 0 ? [newObj,...acc.slice(1)] : [...acc.slice(0,foundIndex),newObj,...acc.slice(foundIndex+1)];\n          } else {\n            return [...acc,{ name: currentVal, count: 1 }];\n          }\n        }\n        if(currentVal === acc) {\n          return [{ name: currentVal, count: 2 }];\n        } else {\n          return [{ name: acc, count: 1 }, {name: currentVal, count: 1}];\n        }\n\n      })\n      setData(startupSectorsCount);\n    }\n  },[startupDir]);\n\n  const formatPercent = d3.format(\".2%\");\n\n  useEffect(() => {\n    if(d3.select(\"#svgCanvas\")) {\n      d3.select(\"#svgCanvas\").remove();\n    }\n    if(isMounted && data.length > 0) {\n\n      let currentAngle = 0;\n      const minimumStepAngle =\n          (Math.PI * 2) / data.map(f => f.count).reduce((acc, val) => acc + val);\n      const dataset = data.map((d, idx) => {\n        const newAngle = d.count * minimumStepAngle;\n        const set = {\n          data: {\n            name: d.name,\n            count: d.count\n          },\n          index: idx,\n          value: d.count,\n          startAngle: currentAngle,\n          endAngle: newAngle + currentAngle,\n          padAngle: 0\n        };\n        currentAngle += newAngle;\n        return set;\n      });\n\n//dataset equal to pieArcData\n      const pieArcData = d3.pie().value(d => d.count)(data);\n      const svgHeight = 800;\n      const svgWidth = pieRef.current.clientWidth*1.8;\n      const total = data.reduce((acc,val,idx) => idx === 1 ? acc.count+val.count : acc+val.count);\n      const margin = {\n        top: 50,\n        bottom: 30,\n        left: 30,\n        right: 30\n      };\n\n      const chartWidth = svgWidth - margin.left - margin.right;\n      const chartHeight = svgHeight - margin.top - margin.bottom;\n\n      const svg = d3\n          .select(pieRef.current)\n          .append(\"svg\")\n          .attr(\"viewBox\", `0 0 ${svgWidth} ${svgHeight}`);\n\n      const pie = svg\n          .append(\"g\")\n          .attr(\"transform\", `translate(${chartWidth / 2},${chartHeight/2 + margin.top})`);\n\n      const arcPie = d3\n          .arc()\n          .innerRadius(110)\n          .outerRadius(310)\n          .padRadius(300)\n          .padAngle(4 / 300)\n          .cornerRadius(8);\n\n      pie\n          .selectAll(\"path\")\n          .data(pieArcData)\n          .join(\"path\")\n          .attr(\"d\", (d, idx) => arcPie(d))\n          .attr(\"id\", d=>  d.data.name)\n          .attr(\"fill\", \"rgba(72,137,247,0.6\")\n          .attr(\"stroke\",\"rgb(72,137,247\")\n          .attr(\"stroke-width\",\"3\");\n      d3.selectAll(\"path\")\n          .data(pieArcData)\n          .each(function(d) {\n            const data = d;\n            const text = pie\n                .append(\"text\")\n                .attr(\"fill\", \"white\")\n                .attr(\"text-anchor\", \"middle\")\n                .style(\"text-anchor\", \"middle\")\n                .attr(\"dy\", \".50em\")\n                .attr(\"transform\", () => {\n                  var _d = arcPie.centroid(data);\n                  _d[0] *= 1.5;\t//multiply by a constant factor\n                  _d[1] *= 1.5;\t//multiply by a constant factor\n                  return \"translate(\" + _d + \")\";\n                });\n\n            text\n                .append(\"tspan\")\n                .attr(\"font-size\", \"24\")\n                .text(data.value.toLocaleString(\"en\") > 1 ? data.data.name : \"\");\n\n            text\n                .append(\"tspan\")\n                .attr(\"x\", \"0\")\n                .attr(\"font-size\", \"20\")\n                .attr(\"font-weight\",700)\n                .attr(\"dy\", \"1.3em\")\n                .text(data.value.toLocaleString(\"en\") > 1 ? `${data.value.toLocaleString(\"en\")} (${formatPercent(data.data.count/total)})` : \"\");\n          });\n    }\n  },[data])\n\n  return (\n      <div id=\"startup-types-chart\" style={{position: \"relative\", height: \"100%\", backgroundColor: \"rgb(36,36,36)\"}} ref={pieRef} />\n  )\n};\n\nexport default BootcampFinalProjectStartupTypePieChart;","\nconst onlyUnique = (val, idx, self) => {\n    return self.indexOf(val) === idx;\n}\n\nexport const getAllVcsByCountry = (startups) => {\n    const vcsByCountry = startups.reduce((acc, val, idx) => {\n        const valHQ = val.hq.trim();\n        const countriesValVCs = val.investors.split(\",\").map(inv => inv.trim());\n        if(idx === 1) {\n            const accHQ = acc.hq.trim();\n            const countriesAccVCs = acc.investors.split(\",\").map(inv => inv.trim());\n\n            let vcs = {};\n            vcs = { ...vcs, [accHQ]:  vcs[accHQ] ? [...vcs[accHQ], ...countriesAccVCs].filter(onlyUnique) : countriesAccVCs };\n            vcs = { ...vcs, [valHQ]: vcs[valHQ] ? [...vcs[valHQ] , ...countriesValVCs].filter(onlyUnique) : countriesValVCs };\n            return vcs;\n        };\n\n        return {\n            ...acc,\n            [valHQ]: acc[valHQ] ? [...acc[valHQ] , ...countriesValVCs].filter(onlyUnique) : countriesValVCs\n        };\n    });\n\n    const vcsByCountryKeys = Object.keys(vcsByCountry);\n    let vcsByCountryForTreemap = vcsByCountryKeys.map(key => {\n        const countryKeys = Object.keys(vcsByCountry[key]);\n        return {\n            name: key,\n            parent: \"Origin\",\n            value: vcsByCountry[key].length,\n            vcs: vcsByCountry[key].join(\", \")\n        }\n    });\n    vcsByCountryForTreemap = [{name: \"Origin\", parent: \"\", value: \"\" }, ...vcsByCountryForTreemap];\n    console.log(\"VCS By Country\",vcsByCountry);\n    console.log(\"VCS By Country Treemap\",vcsByCountryForTreemap);\n    return vcsByCountryForTreemap;\n}","import React, {useContext, useEffect, useRef, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport d3Tip from \"d3-tip\";\nimport {BootcampAppContext} from \"../../Shared/AppSession/app-context\";\nimport {getAllVcsByCountry} from \"./treemap-utils\";\n\nconst BootCampFinalProjectStartupTreemapChart = () => {\n    const { startupDir } = useContext(BootcampAppContext);\n    const [data, setData] = useState(() => []);\n    const [isMounted, setIsMounted] = useState(() => false);\n    const treemapChart = useRef();\n    useEffect(() => {\n        if(!isMounted) {\n            setIsMounted(true);\n        }\n    },[data]);\n    useEffect(() => {\n        if(startupDir.startups) {\n            const { startups } = startupDir;\n            const vcsByCountry = getAllVcsByCountry(startups);\n            setData(vcsByCountry);\n        }\n    },[startupDir]);\n    useEffect(() => {\n        if(d3.select(\"#svgCanvas\")) {\n            d3.select(\"#svgCanvas\").remove();\n        }\n        if(isMounted && Object.keys(data).length > 0) {\n            // console.log(\"Data\",data);\n            const svgHeight = treemapChart.current.clientHeight*1.2;\n            const svgWidth = treemapChart.current.clientWidth;\n            const margin = {\n                top: 10,\n                bottom: 10,\n                left: 20,\n                right: 20\n            };\n            const svg = d3\n                .select(treemapChart.current)\n                .append(\"svg\")\n                .attr(\"id\",\"svgCanvas\")\n                .attr(\"viewBox\", `0 0 ${svgWidth} ${svgHeight}`);\n            const chartWidth = d3.select(\"#svgCanvas\").node().getBoundingClientRect().width - margin.left - margin.right;\n            const chartHeight = svgHeight - margin.top - margin.bottom;\n            const chart = svg\n                .append(\"g\")\n                .attr(\"id\",\"treemap-chart\")\n                .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n\n\n            d3.csv('https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/data_hierarchy_1level.csv', function(d) {\n                return {\n                    name: d.name ? d.name : \"\",\n                    parent: d.parent ? d.parent : \"\",\n                    value: d.value ? d.value : \"\"\n                }\n            }).then((dataset) => {\n                console.log(\"Dataset\",data);\n                const root = d3.stratify()\n                    .id((d, idx) => {\n                        return d.name\n                    })\n                    .parentId((d) => d.parent)\n                    (data);\n                root.sum((d) => +d.value);\n                d3.treemap()\n                    .size([chartWidth,chartHeight])\n                (root);\n                console.log(root.leaves());\n                chart\n                    .selectAll(\"rect\")\n                    .data(root.leaves())\n                    .enter()\n                    .append(\"rect\")\n                    .attr(\"x\", (d) => d.x0)\n                    .attr(\"y\", (d) => d.y0)\n                    .attr(\"width\",(d) => d.x1 - d.x0)\n                    .attr(\"height\",(d) => d.y1 - d.y0)\n                    .style(\"stroke\",\"black\")\n                    .style(\"fill\",\"rgb(72,137,247)\");\n\n\n                chart\n                    .selectAll(\"text\")\n                    .data(root.leaves())\n                    .enter()\n                    .append(\"text\")\n                        .attr(\"x\",(d) => d.x0+10)\n                        .attr(\"y\",(d) => d.y0+20)\n                        .text((d) => d.data.name)\n                        .attr(\"font-size\",\"15px\")\n                        .attr(\"fill\",\"white\");\n            });\n        }\n    },[data]);\n    return <div id=\"vcs-treemap-chart\" style={{position: \"relative\", height: \"100%\", backgroundColor: \"rgb(36,36,36)\"}} ref={treemapChart} />;\n};\n\nexport default BootCampFinalProjectStartupTreemapChart;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    colorPrimary: {\n        backgroundColor: \"rgb(72, 137, 247)\"\n    },\n    colorInherit: {\n        color: \"white\"\n    }\n}));\n\nconst ButtonAppBar = ({toggleDrawer}) => {\n    const classes = useStyles();\n    console.log(\"Toggle Drawer\",toggleDrawer)\n    const handleDrawer = (status) => {\n        console.log(\"Status\",status);\n        toggleDrawer(status);\n    };\n    return (\n        <div className={classes.root} style={{backgroundColor: \"orange\"}}>\n            <AppBar position=\"static\" className={classes.colorPrimary}>\n                <Toolbar>\n                    <Button onClick={() => handleDrawer(true)}>\n                    <IconButton  edge=\"start\" className={`${classes.menuButton} ${classes.colorInherit}`} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    </Button>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Bootcamp Final Project\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default ButtonAppBar;","import React, {useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport ButtonAppBar from \"./appbar\";\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n});\nconst BootcampFinalProjectMenuDrawer = () => {\n    const classes = useStyles();\n    const [open, setOpen] = useState(() => false);\n\n    const toggleDrawer = (status) => (event) => {\n        setOpen(status);\n    };\n\n    const list = () => (\n        <div\n            onClick={toggleDrawer(false)}\n            onKeyDown={toggleDrawer(false)}\n        >\n            <List>\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n            <Divider />\n            <List>\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <div>\n            <ButtonAppBar toggleDrawer={setOpen} />\n            <Drawer anchor={\"left\"} open={open} onClose={toggleDrawer(false)}>\n                {list()}\n            </Drawer>\n        </div>\n    );\n};\n\nexport default BootcampFinalProjectMenuDrawer;\n","import React, {useContext, useEffect, useState} from 'react';\nimport './App.css';\nimport BootcampFinalProjectMap from \"./Components/Map/map\";\nimport BootcampFinalProjectStartupTypePieChart from \"./Components/PieChart/pie\";\nimport BootCampFinalProjectStartupTreemapChart from \"./Components/TreemapChart/treemap\";\nimport BootcampFinalProjectMenuDrawer from \"./Shared/Menu/menu\";\nimport {BootcampAppContext} from \"./Shared/AppSession/app-context\";\nimport Grid from \"@material-ui/core/Grid\";\n\nfunction App() {\n    const { getStartupDirs } = useContext(BootcampAppContext);\n    const [dataFetched, setDataFetched] = useState(() => false);\n    useEffect(() => {\n        if(!dataFetched) {\n            getStartupDirs();\n            setDataFetched(true);\n        }\n    },[dataFetched, getStartupDirs, setDataFetched])\n  return (\n    <div className=\"App\" style={{backgroundColor: \"rgb(36, 36, 36)\", height: \"100vh\"}}>\n        <Grid container spacing={0} style={{height: \"100%\"}}>\n            <Grid itme xs={12}>\n                <BootcampFinalProjectMenuDrawer />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <div style={{padding: \"20px\", backgroundColor: \"rgb(36, 36, 36)\", height: \"100%\"}}>\n                <BootcampFinalProjectMap />\n                </div>\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <Grid item xs={12} style={{height: \"48%\"}}>\n                    <BootcampFinalProjectStartupTypePieChart />\n                </Grid>\n                <Grid item xs={12} style={{height: \"52%\", marginTop: \"40px\"}}>\n                    <BootCampFinalProjectStartupTreemapChart />\n                </Grid>\n            </Grid>\n        </Grid>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport BootcampFinalProjectContextProvider from \"./Shared/AppSession/app-context\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BootcampFinalProjectContextProvider>\n         <App />\n      </BootcampFinalProjectContextProvider>\n</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}