{"version":3,"sources":["Data/companies_marketshare.csv","Data/countries_values.csv","Shared/Menu/appbar.js","Shared/Menu/menu.js","Constants/app-constants.js","Utils/services.js","Shared/AppSession/app-context.js","Components/Map/map.js","Components/PieChart/pie.js","Components/TreemapChart/treemap-utils.js","Components/TreemapChart/treemap.js","Components/StartupDahsboard/startup-dashboard.js","Components/AnimatedBarchartCompanies/animated-bar-chart-utils.js","Components/AnimatedBarchartCompanies/animated-bar-chart-companies.js","Components/AnimatedBarchartCompanies/animated-bar-chart-countries.js","Shared/Slider/slider.js","Components/TechHistory/tech-history.js","Components/MLTable/ml-table.js","Components/MLTable/ml-table-container.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","colorPrimary","backgroundColor","colorInherit","color","ButtonAppBar","toggleDrawer","classes","className","style","AppBar","position","Toolbar","IconButton","onClick","edge","aria-label","Typography","variant","list","width","fullList","items","id","icon","select","path","BootcampFinalProjectMenuDrawer","useState","open","setOpen","status","event","Drawer","anchor","onClose","onKeyDown","List","slice","map","listItem","index","key","to","textDecoration","ListItem","button","ListItemIcon","ListItemText","primary","Divider","MAPBOX_API_URL","API_DEV_URL","predictNewYearCorrelation","lastYearCorrelation","axios","post","then","jsonResponse","data","catch","e","alert","BootcampAppContext","createContext","undefined","BootcampFinalProjectContextProvider","props","startupDir","setStartupDir","mlData","setMLData","selCountry","setSelCountry","getStartupDirs","a","get","dir","console","log","startups","getLastYear","predictNewYear","Provider","value","world","addStartupInfoToCountry","feature","layer","name","properties","startupsFound","filter","stp","hq","length","startupContent","i","desc","ceo","foundedDate","investors","label","market","sector","stage","on","setStyle","bindPopup","autoPan","filterStartupsLATAM","children","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","BootcampFinalProjectMap","state","lat","lng","maxBoundsViscosity","dragging","zoom","minZoom","maxZoom","setState","MapStateHandler","useContext","Map","center","maxBounds","class","TileLayer","attribution","url","GeoJSON","onEachFeature","BootcampFinalProjectStartupTypePieChart","setData","isMounted","setIsMounted","pieRef","useRef","useEffect","startupSectorsCount","reduce","acc","currentVal","idx","Array","isArray","foundIndex","findIndex","obj","newObj","count","formatPercent","d3","remove","currentAngle","minimumStepAngle","Math","PI","f","val","d","newAngle","set","startAngle","endAngle","padAngle","pieArcData","svgWidth","current","clientWidth","total","margin","top","bottom","left","right","chartWidth","chartHeight","svg","append","attr","pie","text","buttonG","arcPie","innerRadius","outerRadius","padRadius","cornerRadius","tooltip","d3Tip","offset","html","selectAll","join","classed","show","hide","each","_d","centroid","toLocaleString","call","height","borderBottom","ref","onlyUnique","self","indexOf","BootCampFinalProjectStartupTreemapChart","treemapChart","vcsByCountry","valHQ","trim","countriesValVCs","split","inv","accHQ","countriesAccVCs","vcs","vcsByCountryForTreemap","Object","keys","parent","getAllVcsByCountry","svgHeight","clientHeight","node","getBoundingClientRect","chart","parentId","sum","size","leaves","enter","x0","y0","x1","y1","BootcampFinalProjectStartupDashboard","dataFetched","setDataFetched","Grid","item","xs","md","padding","fontFamily","marginTop","createScales","yearSlice","top_n","xScale","domain","range","yScale","createAxis","xAxis","scale","ticks","tickSize","tickFormat","styleAxis","year","yearText","createBars","barPadding","rank","lastValue","ticker","tickDuration","handleCurrentYear","maxYear","isNaN","sort","b","forEach","transition","duration","ease","bars","replace","exit","labels","valueLabels","tween","t","this","textContent","BootCampFinalProjectAnimatedBarChartCompanies","play","currentYear","sliderYear","tickerInterval","setTickerInterval","animatedChartCompanies","companies","dataset","colour","random","st","stop","tick","BootCampFinalProjectAnimatedBarChartCountries","animatedChartCountries","titleText","subTitleText","createTitles","styles","track","NonLinearSlider","handleSliderYear","minValue","maxValue","gutterBottom","Slider","min","step","max","x","onChange","newValue","valueLabelDisplay","aria-labelledby","BootcampFinalProjectTechHistory","playCompanies","setPlayCompanies","currentYearCompanies","setCurrentYearCompanies","sliderYearCompanies","setSliderYearCompanies","playCountries","setPlayCountries","currentYearCountries","setCurrentYearCountries","sliderYearCountries","setSliderYearCountries","container","textAlign","marginBottom","Button","border","table","minWidth","bodyHeader","fontSize","fontWeight","bodyCell","BootcampFinalProjectMLTable","rows","setRows","mlD","createData","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","scope","toString","BootcampFinalProjectMLTableContainer","display","alignItems","marginLeft","App","exact","from","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.bd5ad4c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/companies_marketshare.6ca6dea8.csv\";","module.exports = __webpack_public_path__ + \"static/media/countries_values.dda1a754.csv\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    colorPrimary: {\n        backgroundColor: \"rgb(72, 137, 247)\"\n    },\n    colorInherit: {\n        color: \"white\"\n    }\n}));\n\nconst ButtonAppBar = ({toggleDrawer}) => {\n    const classes = useStyles();\n    const handleDrawer = (status) => {\n        toggleDrawer(status);\n    };\n    return (\n        <div className={classes.root} style={{backgroundColor: \"orange\"}}>\n            <AppBar position=\"static\" className={classes.colorPrimary}>\n                <Toolbar>\n                    <IconButton onClick={() => handleDrawer(true)}  edge=\"start\" className={`${classes.menuButton} ${classes.colorInherit}`} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Bootcamp Final Project\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default ButtonAppBar;","import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport { Link } from \"react-router-dom\";\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ButtonAppBar from \"./appbar\";\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n});\nconst items = [\n    { id: \"TECH HISTORY\", icon: <TimelineIcon />, select: false, path:\"/tech-history\" },\n    { id: \"ML TABLE\", icon: <TableChartIcon /> , select: false, path: \"/ml-table\" },\n    { id: \"STARTUPS LATAM\", icon: <DashboardIcon />, select: false, path:\"/startup-dashboard\" }\n]\nconst BootcampFinalProjectMenuDrawer = () => {\n    const classes = useStyles();\n    const [open, setOpen] = useState(() => false);\n\n    const toggleDrawer = (status) => (event) => {\n        setOpen(status);\n    };\n\n    const list = () => (\n        <div\n            onClick={toggleDrawer(false)}\n            onKeyDown={toggleDrawer(false)}\n        >\n            <List>\n                {items.slice(0,1).map((listItem, index) => (\n                    <Link key={listItem.id} to={listItem.path} style={{textDecoration: 'none', color: 'inherit'}}>\n                        <ListItem button >\n                            <ListItemIcon>{listItem.icon}</ListItemIcon>\n                            <ListItemText primary={listItem.id} />\n                        </ListItem>\n                    </Link>\n                ))}\n            </List>\n            <Divider />\n            <List>\n                {items.slice(1).map((listItem, index) => (\n                    <Link key={listItem.id} to={listItem.path} style={{textDecoration: 'none', color: 'inherit'}}>\n                        <ListItem button >\n                            <ListItemIcon>{listItem.icon}</ListItemIcon>\n                            <ListItemText primary={listItem.id} />\n                        </ListItem>\n                    </Link>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <div>\n            <ButtonAppBar toggleDrawer={setOpen} />\n            <Drawer anchor={\"left\"} open={open} onClose={toggleDrawer(false)}>\n                {list()}\n            </Drawer>\n        </div>\n    );\n};\n\nexport default BootcampFinalProjectMenuDrawer;\n","const acessToken = \"pk.eyJ1IjoiZ3VndW5uZXIiLCJhIjoiY2tjbWxoamwzMDJmajJ4cWtsNHN6NjJkNiJ9.gTU76mp1kS4Rn7Kh5h67EQ\";\nconst MAPBOX_API_URL = `https://api.mapbox.com/styles/v1/gugunner/ckdnjzx3i2ca61jmvld4f035x/tiles/256/{z}/{x}/{y}@2x?access_token=${acessToken}`;\n// const API_DEV_URL = \"http://localhost:5000/bootcamp-final-project/api/\";\nconst API_DEV_URL = \"https://bootcamp-final-project-app.herokuapp.com/bootcamp-final-project/api/\"\nexport {\n    acessToken,\n    MAPBOX_API_URL,\n    API_DEV_URL\n};","import { API_DEV_URL } from \"../Constants/app-constants\";\nimport axios from \"axios\";\n\nexport const getAllStartups = () => {\n    return axios.get(`${API_DEV_URL}startups`).then(jsonResponse => {\n        return jsonResponse ? jsonResponse.data : false;\n    }).catch(e => {\n        alert(\"Startup directory could not be loaded\")\n    return false\n    });\n};\n\nexport const getLastYearCorrelation = () => {\n    return axios.get(`${API_DEV_URL}last-year`).then(jsonResponse => {\n        return jsonResponse ? jsonResponse.data : false;\n    }).catch(e => {\n        alert(\"No ML Value found\")\n        return false;\n    });\n};\n\nexport const predictNewYearCorrelation = (lastYearCorrelation) => {\n    return axios.post(`${API_DEV_URL}ml-value`, {\n        ...lastYearCorrelation\n    }).then(jsonResponse => {\n        return jsonResponse ? jsonResponse.data : false;\n    }).catch(e => {\n        alert(\"No ML Value found\")\n        return false;\n    });\n};\n","import React, {createContext, useState} from \"react\";\nimport ReactDOMServer from 'react-dom/server';\nimport world from \"../../Data/custom_world.geo.json\";\nimport { getAllStartups, getLastYearCorrelation, predictNewYearCorrelation } from \"../../Utils/services\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nexport const BootcampAppContext = createContext(undefined);\n\nconst BootcampFinalProjectContextProvider = (props) => {\n    const [startupDir, setStartupDir] = useState(() => []);\n    const [mlData, setMLData] = useState(() => []);\n    const [selCountry,setSelCountry] = useState(() => \"\");\n    const filterStartupsLATAM = (feature, layer) => {\n        const { name } = feature.properties;\n        const startupsFound = startupDir.startups.filter(stp => stp.hq === name );\n        const popupOptions = {\n           autoPan: false\n        };\n        if(startupsFound.length > 0) {\n            let startupContent = \"\";\n            for(let i = 0; i < startupsFound.length; i++) {\n                const {ceo, desc, foundedDate, hq, id, investors, label, market, name, sector, stage} = startupsFound[i];\n                const startupString = `<tr>\n                                            <td>${name}</td>\n                                            <td>${desc}</td>\n                                            <td>${sector}</td>\n                                            <td>${stage}</td>\n                                        </tr>`;\n                startupContent += startupString;\n            }\n            startupContent = `<div class=\"startup-table\">\n                                <h3 class=\"sticky-country-header\">Startups funded in ${name}</h3>\n                                <table>\n                                    <thead>\n                                        <tr>\n                                            <th class=\"sticky-header\">Name</th>\n                                            <th class=\"sticky-header\">Description</th>\n                                            <th class=\"sticky-header\">Sector</th>\n                                            <th class=\"sticky-header\">Stage</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        ${startupContent}\n                                    </tbody>\n                                </table>\n                            </div>`\n            layer.on(\"mouseover\",  () => {\n                console.log(\"Layer\", layer);\n                layer.setStyle({\n                    \"fillColor\": \"rgb(72,137,247)\",\n                    \"fillOpacity\": 0.6\n                })\n            });\n            layer.on(\"mouseout\", () =>\n                layer.setStyle({\n                    \"fillColor\": \"rgba(72,137,247,0.6)\",\n                    \"fillOpacity\": 0.2\n                })\n            );\n            layer.on(\"click\", () => {\n                setSelCountry(name);\n            });\n            layer.bindPopup(startupContent,popupOptions);\n        }\n    };\n    const addStartupInfoToCountry = (feature, layer) => {\n        filterStartupsLATAM(feature, layer);\n    };\n    const getStartupDirs = async() => {\n        const dir = await getAllStartups();\n        if(dir) {\n            console.log(\"Startups Dir\", dir.startups);\n            setStartupDir(dir);\n        }\n    };\n    const getLastYear = async() => {\n        const data = await getLastYearCorrelation();\n        if(data) {\n            console.log(\"Data ML\", data);\n            setMLData([data]);\n        }\n    };\n    const predictNewYear = async(lastYearCorrelation) => {\n        const data = await predictNewYearCorrelation(lastYearCorrelation);\n        if(data) {\n            setMLData([...mlData,data]);\n        }\n    }\n    return (\n        <BootcampAppContext.Provider value={{\n            world,\n            addStartupInfoToCountry,\n            startupDir,\n            getStartupDirs,\n            getLastYear,\n            predictNewYear,\n            mlData,\n            selCountry,\n            setSelCountry\n        }}>\n            {props.children}\n        </BootcampAppContext.Provider>\n    );\n};\n\nexport default BootcampFinalProjectContextProvider;","import React, {useContext, useEffect, useState} from \"react\";\nimport { Map, TileLayer, GeoJSON } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { BootcampAppContext } from \"../../Shared/AppSession/app-context\";\n// import * as d3 from \"d3\";\nimport { MAPBOX_API_URL } from \"../../Constants/app-constants\";\nimport * as bounds from \"leaflet\";\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\nconst MapStateHandler = () => {\n    const [state, setState] = useState(() => ({\n        lat: 38.2307,\n        lng: -101.5887,\n        maxBoundsViscosity: 1.0,\n        dragging: false,\n        zoom: 2,\n        minZoom: 2,\n        maxZoom: 2\n    }));\n    return { state, setState};\n};\n\nconst BootcampFinalProjectMap = () => {\n    const { state } = MapStateHandler();\n    const { startupDir, world, addStartupInfoToCountry } = useContext(BootcampAppContext);\n    const position = [state.lat, state.lng];\n    return (\n        <Map\n            center={position}\n            zoom={state.zoom}\n            minZoom={state.minZoom}\n            maxZoom={state.maxZoom}\n            maxBounds={state.maxBounds}\n            maxBoundsViscosity={state.maxBoundsViscosity}\n            dragging={state.dragging}\n            class=\"project-map\">\n            <TileLayer\n                attribution='Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>'\n                url={MAPBOX_API_URL}\n            />\n            {\n                startupDir.startups ?\n                <GeoJSON data={world} onEachFeature={addStartupInfoToCountry}/> : \"\"\n            }\n\n        </Map>\n    )\n};\n\nexport default BootcampFinalProjectMap;","import React, {useContext, useEffect, useRef, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport d3Tip from \"d3-tip\";\nimport {BootcampAppContext} from \"../../Shared/AppSession/app-context\";\nconst BootcampFinalProjectStartupTypePieChart = () => {\n  const { startupDir, selCountry, setSelCountry } = useContext(BootcampAppContext);\n  const [data, setData] = useState(() => []);\n  const [isMounted, setIsMounted] = useState(() => false);\n  const pieRef = useRef();\n\n  useEffect(() => {\n    if(!isMounted) {\n      setIsMounted(true);\n    }\n  },[data]);\n\n  useEffect(() => {\n    if(startupDir.startups) {\n      const { startups } = startupDir;\n      let startupSectors = [];\n      if(selCountry !== \"\") {\n        startupSectors = startups.filter(stp => stp.hq === selCountry).map(stp => stp.sector);\n      } else {\n        startupSectors =  startups.map(stp => stp.sector);\n      }\n      const startupSectorsCount = startupSectors.reduce((acc,currentVal,idx) => {\n        if(typeof acc !== \"string\" && Array.isArray(acc)) {\n          const foundIndex = acc.findIndex(obj => {\n            return obj.name === currentVal\n          });\n          if(foundIndex !== -1) {\n            const newObj = { name: acc[foundIndex].name, count: acc[foundIndex].count +1 };\n            return foundIndex === 0 ? [newObj,...acc.slice(1)] : [...acc.slice(0,foundIndex),newObj,...acc.slice(foundIndex+1)];\n          } else {\n            return [...acc,{ name: currentVal, count: 1 }];\n          }\n        }\n        if(currentVal === acc) {\n          return [{ name: currentVal, count: 2 }];\n        } else {\n          return [{ name: acc, count: 1 }, {name: currentVal, count: 1}];\n        }\n\n      });\n      console.log(\"Startup Sectors Count\", startupSectorsCount);\n      if(typeof startupSectorsCount === \"string\") {\n        setData([{\n          name: startupSectorsCount,\n          count: 1\n        }]);\n      } else {\n        setData(startupSectorsCount);\n      }\n    }\n  },[startupDir, selCountry]);\n\n  const formatPercent = d3.format(\".2%\");\n\n  useEffect(() => {\n    if(d3.select(\"#svgCanvas\")) {\n      d3.select(\"#svgCanvas\").remove();\n    }\n    if(isMounted && data.length > 0) {\n\n      let currentAngle = 0;\n      console.log(\"Data\", data)\n      if(data && data.length > 0) {\n        const minimumStepAngle =\n            (Math.PI * 2) / data.map(f => f.count).reduce((acc, val) => acc + val);\n        const dataset = data.map((d, idx) => {\n          const newAngle = d.count * minimumStepAngle;\n          const set = {\n            data: {\n              name: d.name,\n              count: d.count\n            },\n            index: idx,\n            value: d.count,\n            startAngle: currentAngle,\n            endAngle: newAngle + currentAngle,\n            padAngle: 0\n          };\n          currentAngle += newAngle;\n          return set;\n        });\n      }\n\n//dataset equal to pieArcData\n      const pieArcData = d3.pie().value(d => d.count)(data);\n      const svgHeight = 800;\n      const svgWidth = pieRef.current.clientWidth*1.8;\n      let total = 0;\n      if(data.length > 1) {\n        total = data.reduce((acc,val,idx) => idx === 1 ? acc.count+val.count : acc+val.count);\n      } else {\n        total = 1;\n      }\n      const margin = {\n        top: 50,\n        bottom: 30,\n        left: 30,\n        right: 30\n      };\n      const chartWidth = svgWidth - margin.left - margin.right;\n      const chartHeight = svgHeight - margin.top - margin.bottom;\n      const svg = d3\n          .select(pieRef.current)\n          .append(\"svg\")\n          .attr(\"id\",\"svgCanvas\")\n          .attr(\"viewBox\", `0 0 ${svgWidth} ${svgHeight}`);\n      const title = svg\n          .append(\"text\")\n          .text( (selCountry !== \"\" ? selCountry : \"Latam\")+\" Startups By Sectors\")\n          .attr(\"transform\", 'translate(50,100)')\n          .attr(\"fill\",\"white\")\n          .attr(\"font-size\",\"45px\")\n          .attr(\"font-family\",\"Open Sans\");\n      const pie = svg\n          .append(\"g\")\n          .attr(\"transform\", `translate(${chartWidth / 2},${chartHeight/2 + margin.top})`);\n      if(selCountry !== \"\") {\n        const buttonG = svg\n            .append(\"g\")\n            .attr(\"transform\",`translate(${margin.left},${chartHeight-margin.bottom})`)\n            .style(\"cursor\",\"pointer\");\n        buttonG\n            .append(\"rect\")\n            .attr(\"width\",\"180px\")\n            .attr(\"height\",\"50px\")\n            .attr(\"fill\",\"transparent\")\n            .attr(\"stroke\",\"rgb(72,137,247)\")\n            .style(\"padding\",\"16px\");\n        buttonG\n            .append(\"text\")\n            .attr(\"font-size\",\"30px\")\n            .attr(\"font-family\",\"Open Sand\")\n            .attr(\"x\",50)\n            .attr(\"y\",35)\n            .attr(\"fill\",\"white\")\n            .text(\"Clear\");\n\n        buttonG\n            .on(\"click\",() => {\n              setSelCountry(\"\");\n            });\n      }\n      const arcPie = d3\n          .arc()\n          .innerRadius(110)\n          .outerRadius(310)\n          .padRadius(300)\n          .padAngle(4 / 300)\n          .cornerRadius(8);\n      const tooltip = d3Tip()\n          .attr(\"class\",\"tooltip\")\n          .style(\"background-color\",\"rgb(36,36,36)\")\n          .style(\"font-size\",\"12px\")\n          .style(\"font-family\",\"Open Sans\")\n          .style(\"padding\",\"8px\")\n          .style(\"color\",\"white\")\n          .style(\"width\",\"120px\")\n          .style(\"height\",\"80px\")\n          .style(\"text-align\",\"center\")\n          .style(\"border\",\"1px solid rgba(72,137,247,0.6)\")\n          .offset([0,0])\n          .html(d => `\n                    <div>\n                        <h4 style=\"margin: 4px\">Sector</h4>\n                        <h5 style=\"margin: 4px\">${d.data.name}</h5>\n                        <p style=\"font-family: 'Open Sans'; text-align: center ; margin: 8px\">${formatPercent(d.data.count/total)}</p>\n                    </div>`);\n      pie\n          .selectAll(\"path\")\n          .data(pieArcData)\n          .join(\"path\")\n          .classed(\"startup-path\",true)\n          .attr(\"d\", (d, idx) => arcPie(d))\n          .attr(\"id\", d=>  d.data.name)\n          .attr(\"fill\", \"rgba(72,137,247,0.6)\")\n          .attr(\"stroke\",\"rgb(72,137,247)\")\n          .attr(\"stroke-width\",\"3\")\n          .style(\"cursor\",\"pointer\")\n          .on(\"mouseover\", tooltip.show)\n          .on(\"mouseout\", tooltip.hide);\n      pie\n          .selectAll(\"path\")\n          .data(pieArcData)\n          .each(function(d) {\n            const data = d;\n            const text = pie\n                .append(\"text\")\n                .attr(\"fill\", \"white\")\n                .attr(\"text-anchor\", \"middle\")\n                .style(\"text-anchor\", \"middle\")\n                .attr(\"dy\", \".50em\")\n                .attr(\"transform\", () => {\n                  var _d = arcPie.centroid(data);\n                  _d[0] *= 1.5;\n                  _d[1] *= 1.5;\n                  return \"translate(\" + _d + \")\";\n                });\n            text\n                .append(\"tspan\")\n                .attr(\"font-size\", \"24\")\n                .text(data.value.toLocaleString(\"en\") > 2 || selCountry !== \"\" ? data.data.name : \"\");\n            text\n                .append(\"tspan\")\n                .attr(\"x\", \"0\")\n                .attr(\"font-size\", \"20\")\n                .attr(\"font-weight\",700)\n                .attr(\"dy\", \"1.3em\")\n                .text(data.value.toLocaleString(\"en\") > 5 || selCountry !== \"\" ? `${data.value.toLocaleString(\"en\")} (${formatPercent(data.data.count/total)})` : \"\");\n            pie.call(tooltip);\n          });\n    }\n  },[data])\n\n  return (\n      <div id=\"startup-types-chart\" style={{position: \"relative\", height: \"100%\", backgroundColor: \"rgb(36,36,36)\", borderBottom: \"3px solid rgb(72,137,247)\"}} ref={pieRef} />\n  )\n};\n\nexport default BootcampFinalProjectStartupTypePieChart;","\nconst onlyUnique = (val, idx, self) => {\n    return self.indexOf(val) === idx;\n}\n\nexport const getAllVcsByCountry = (startups) => {\n    const vcsByCountry = startups.reduce((acc, val, idx) => {\n        const valHQ = val.hq.trim();\n        const countriesValVCs = val.investors.split(\",\").map(inv => inv.trim());\n        if(idx === 1) {\n            const accHQ = acc.hq.trim();\n            const countriesAccVCs = acc.investors.split(\",\").map(inv => inv.trim());\n\n            let vcs = {};\n            vcs = { ...vcs, [accHQ]:  vcs[accHQ] ? [...vcs[accHQ], ...countriesAccVCs].filter(onlyUnique) : countriesAccVCs };\n            vcs = { ...vcs, [valHQ]: vcs[valHQ] ? [...vcs[valHQ] , ...countriesValVCs].filter(onlyUnique) : countriesValVCs };\n            return vcs;\n        };\n\n        return {\n            ...acc,\n            [valHQ]: acc[valHQ] ? [...acc[valHQ] , ...countriesValVCs].filter(onlyUnique) : countriesValVCs\n        };\n    });\n\n    const vcsByCountryKeys = Object.keys(vcsByCountry);\n    let vcsByCountryForTreemap = vcsByCountryKeys.map(key => {\n        const countryKeys = Object.keys(vcsByCountry[key]);\n        return {\n            name: key,\n            parent: \"Origin\",\n            value: vcsByCountry[key].length,\n            vcs: vcsByCountry[key]\n        }\n    });\n    vcsByCountryForTreemap = [{name: \"Origin\", parent: \"\", value: \"\" }, ...vcsByCountryForTreemap];\n    console.log(\"VCS By Country\",vcsByCountry);\n    console.log(\"VCS By Country Treemap\",vcsByCountryForTreemap);\n    return vcsByCountryForTreemap;\n}","import React, {useContext, useEffect, useRef, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport d3Tip from \"d3-tip\";\nimport {BootcampAppContext} from \"../../Shared/AppSession/app-context\";\nimport {getAllVcsByCountry} from \"./treemap-utils\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst BootCampFinalProjectStartupTreemapChart = () => {\n    const { startupDir } = useContext(BootcampAppContext);\n    const [data, setData] = useState(() => []);\n    const [isMounted, setIsMounted] = useState(() => false);\n    const treemapChart = useRef();\n    useEffect(() => {\n        if(!isMounted) {\n            setIsMounted(true);\n        }\n    },[data]);\n    useEffect(() => {\n        if(startupDir.startups) {\n            const { startups } = startupDir;\n            const vcsByCountry = getAllVcsByCountry(startups);\n            setData(vcsByCountry);\n        }\n    },[startupDir]);\n    useEffect(() => {\n        if(d3.select(\"#svgCanvas2\")) {\n            d3.select(\"#svgCanvas2\").remove();\n        }\n        if(isMounted && Object.keys(data).length > 0) {\n            // console.log(\"Data\",data);\n            const svgHeight = treemapChart.current.clientHeight;\n            const svgWidth = treemapChart.current.clientWidth;\n            const margin = {\n                top: 50,\n                bottom: 50,\n                left: 20,\n                right: 20\n            };\n            const svg = d3\n                .select(treemapChart.current)\n                .append(\"svg\")\n                .attr(\"id\",\"svgCanvas2\")\n                .attr(\"viewBox\", `0 0 ${svgWidth} ${svgHeight}`);\n\n            const title = svg\n                .append(\"text\")\n                .text(\"VCs count investment by startup country HQ\")\n                .attr(\"transform\", 'translate(50,30)')\n                .attr(\"fill\",\"white\")\n                .attr(\"font-size\",\"24.4px\")\n                .attr(\"font-family\",\"Open Sans\");\n\n            const chartWidth = d3.select(\"#svgCanvas2\").node().getBoundingClientRect().width - margin.left - margin.right;\n            const chartHeight = svgHeight - margin.top - margin.bottom;\n            const chart = svg\n                .append(\"g\")\n                .attr(\"id\",\"treemap-chart\")\n                .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n                console.log(\"Dataset\",data);\n                const root = d3.stratify()\n                    .id((d, idx) => {\n                        return d.name\n                    })\n                    .parentId((d) => d.parent)\n                    (data);\n                root.sum((d) => d.value < 10 ? +d.value*3 : +d.value);\n                d3.treemap()\n                    .size([chartWidth,chartHeight])\n                (root);\n\n            const tooltip = d3Tip()\n                .attr(\"class\",\"tooltip\")\n                .style(\"background-color\",\"rgb(36,36,36)\")\n                .style(\"font-size\",\"12px\")\n                .style(\"font-family\",\"Open Sans\")\n                .style(\"padding\",\"8px\")\n                .style(\"color\",\"white\")\n                .style(\"max-width\",\"400px\")\n                .style(\"min-width\",\"100px\")\n                .style(\"height\",\"auto\")\n                .style(\"text-align\",\"center\")\n                .style(\"border\",\"1px solid rgba(72,137,247,0.6)\")\n                .offset([0,0])\n                .html(d => {\n                    console.log(\"D\",d)\n                    return `<div>\n                        <h3>${d.data.name}</h3>\n                        <h4>Venture Capitals</h4>\n                        <p>${d.data.vcs.join(\", \")}</p>\n                    </div>`\n                });\n\n                chart\n                    .selectAll(\"rect\")\n                    .data(root.leaves())\n                    .enter()\n                    .append(\"rect\")\n                    .classed(\"startup-rect\",true)\n                    .attr(\"x\", (d) => d.x0)\n                    .attr(\"y\", (d) => d.y0)\n                    .attr(\"width\",(d) => d.x1 - d.x0)\n                    .attr(\"height\",(d) => d.y1 - d.y0)\n                    .attr(\"fill\",\"rgba(72,137,247,0.6)\")\n                    .attr(\"stroke\",\"rgb(72,137,247)\")\n                    .attr(\"stroke-width\",\"3\")\n                    .style(\"cursor\",\"pointer\")\n                    .on(\"mouseover\",tooltip.show)\n                    .on(\"mouseout\",tooltip.hide);\n                chart\n                    .selectAll(\"text\")\n                    .data(root.leaves())\n                    .enter()\n                    .append(\"text\")\n                        .attr(\"x\",(d) => d.x0+10)\n                        .attr(\"y\",(d) => d.y0+20)\n                        .text((d) => d.data.value > 10 ? d.data.name : \"\")\n                        .attr(\"font-size\",\"15px\")\n                        .attr(\"fill\",\"white\");\n                chart.call(tooltip);\n        }\n    },[data]);\n    return <div id=\"vcs-treemap-chart\" style={{position: \"relative\", height: \"100%\", backgroundColor: \"rgb(36,36,36)\"}} ref={treemapChart} />;\n};\n\nexport default BootCampFinalProjectStartupTreemapChart;\n","import React, {useContext, useEffect, useState} from \"react\";\nimport {BootcampAppContext} from \"../../Shared/AppSession/app-context\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Typography} from \"@material-ui/core\";\nimport BootcampFinalProjectMap from \"../Map/map\";\nimport BootcampFinalProjectStartupTypePieChart from \"../PieChart/pie\";\nimport BootCampFinalProjectStartupTreemapChart from \"../TreemapChart/treemap\";\n\nconst BootcampFinalProjectStartupDashboard = () => {\n    const { getStartupDirs } = useContext(BootcampAppContext);\n    const [dataFetched, setDataFetched] = useState(() => false);\n    useEffect(() => {\n        if(!dataFetched) {\n            getStartupDirs();\n            setDataFetched(true);\n        }\n    },[dataFetched, getStartupDirs, setDataFetched])\n    return (\n        <>\n            <Grid item xs={12} md={6}>\n                <div style={{padding: \"20px\", backgroundColor: \"rgb(36, 36, 36)\", height: \"100%\"}}>\n                    <Typography variant=\"h2\" style={{fontFamily: \"Open Sans\", color: \"White\", padding: \"16px\"}}>LatAm Startups panorama</Typography>\n                    <BootcampFinalProjectMap />\n                </div>\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <Grid item xs={12} style={{height: \"48%\"}}>\n                    <BootcampFinalProjectStartupTypePieChart />\n                </Grid>\n                <Grid item xs={12} style={{height: \"52%\", marginTop: \"40px\"}}>\n                    <BootCampFinalProjectStartupTreemapChart />\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default BootcampFinalProjectStartupDashboard;","import * as d3 from \"d3\";\n\nexport const createTitles = (svg,margin, titleText, subTitleText) => {\n    const title = svg\n        .append('text')\n        .attr('class', 'title')\n        .attr(\"fill\",\"white\")\n        .attr(\"font-family\",\"Open Sans\")\n        .attr(\"x\", margin.left)\n        .attr('y', 24)\n        .html(titleText);\n\n    const subTitle = svg\n        .append(\"text\")\n        .attr(\"class\", \"subTitle\")\n        .attr(\"fill\",\"white\")\n        .attr(\"font-family\",\"Open Sans\")\n        .attr(\"x\", margin.left)\n        .attr(\"y\", 55)\n        .html(subTitleText);\n};\n\nexport const createScales = (yearSlice, chartHeight, chartWidth, top_n, margin) => {\n\n    const xScale = d3.scaleLinear()\n        .domain([\n        0, d3.max(yearSlice, d => d.value)\n    ]).range([\n        margin.left,\n        chartWidth\n    ]);\n    console.log(\"Maximum Value\", d3.max(yearSlice, d => d.value));\n\n    const yScale = d3.scaleLinear()\n        .domain([top_n, 0])\n        .range([\n        chartHeight,\n        margin.top\n    ]);\n    return { xScale, yScale };\n};\n\nexport const createAxis = (xScale, chartHeight, chartWidth, margin, chart) => {\n    const xAxis = d3\n        .axisTop()\n        .scale(xScale)\n        .ticks(chartWidth > 500 ? 5 : 2)\n        .tickSize(-(chartHeight - margin.top - margin.bottom))\n        .tickFormat(d => d3.format(',')(d));\n    chart\n        .append('g')\n        .attr('id', 'x-axis')\n        .attr('transform', `translate(0, ${\n            margin.top\n        })`).call(xAxis)\n        .selectAll('.tick line')\n        .classed('origin', d => d == 0);\n\n    d3\n        .selectAll(\"#x-axis\")\n        .selectAll(\".tick\")\n        .select(\"text\")\n        .attr(\"fill\",\"white\")\n        .attr(\"font-family\",\"Open Sans\")\n\n    d3\n        .selectAll(\"#x-axis\")\n        .selectAll(\".tick\")\n        .select(\"line\")\n        .attr(\"stroke\",\"white\");\n\n    d3\n        .selectAll(\"#x-axis\")\n        .select(\".domain\")\n        .attr(\"stroke\",\"white\");\n\n    return xAxis;\n};\n\nexport const styleAxis = (chart, chartWidth, chartHeight, year) => {\n    const yearText = chart\n        .append('text')\n        .attr('x', chartWidth)\n        .attr('y', chartHeight)\n        .attr(\"fill\",\"white\")\n        .attr(\"font-family\",\"Open Sans\")\n        .style('text-anchor', 'end')\n        .html(~~ year)\n    return { yearText };\n};\n\nexport const createBars = (chart, yearSlice, xScale, yScale, barPadding) => {\n    chart\n        .selectAll('rect.bar')\n        .data(yearSlice, d => d.name)\n        .enter()\n        .append('rect')\n        .attr('class', 'bar')\n        .attr('x', xScale(0) + 1)\n        .attr('width', d => xScale(d.value) - xScale(0) - 1)\n        .attr('y', d => yScale(d.rank) + 5)\n        .attr('height', yScale(1) - yScale(0) - barPadding)\n        .attr('fill', \"rgba(72,137,247,0.6)\")\n        .attr(\"stroke\",\"rgb(72,137,247)\")\n        .attr(\"stroke-width\",3);\n\n    chart\n        .selectAll('text.label')\n        .data(yearSlice, d => d.name)\n        .enter().append('text')\n        .attr('class', 'label')\n        .attr('x', d => xScale(d.value) - 8)\n        .attr('y', d => yScale(d.rank) + 5 + ((yScale(1) - yScale(0)) / 2) + 1)\n        .attr(\"fill\",\"white\")\n        .attr(\"font-family\",\"Open Sans\")\n        .style('text-anchor', 'end').html(d => d.name);\n\n    chart\n        .selectAll('text.valueLabel')\n        .data(yearSlice, d => d.name)\n        .enter()\n        .append('text')\n        .attr('class', 'valueLabel')\n        .attr('x', d => xScale(d.value) + 5)\n        .attr('y', d => yScale(d.rank) + 5 + ((yScale(1) - yScale(0)) / 2) + 1)\n        .attr(\"fill\",\"white\")\n        .attr(\"font-family\",\"Open Sans\")\n        .text(d => d3.format(',.0f')(d.lastValue));\n};\n\nexport const ticker = (yearSlice, data, xScale, yScale, xAxis, barPadding, yearText, top_n, chart, tickDuration, year, handleCurrentYear, maxYear) => {\n    return d3.interval(e => {\n        yearSlice = data.filter(d => d.year == year && !isNaN(d.value))\n            .sort((a, b) => b.value - a.value)\n            .slice(0, top_n);\n        yearSlice.forEach((d, i) => d.rank = i);\n        xScale.domain([\n            0, d3.max(yearSlice, d => d.value)\n        ]);\n        chart\n            .select('#x-axis')\n            .transition()\n            .duration(tickDuration)\n            .ease(d3.easeLinear)\n            .call(xAxis);\n\n        d3\n            .selectAll(\"#x-axis\")\n            .selectAll(\".tick\")\n            .select(\"text\")\n            .attr(\"fill\",\"white\")\n            .attr(\"font-family\",\"Open Sans\")\n\n        d3\n            .selectAll(\"#x-axis\")\n            .selectAll(\".tick\")\n            .select(\"line\")\n            .attr(\"stroke\",\"white\");\n\n        d3\n            .selectAll(\"#x-axis\")\n            .select(\".domain\")\n            .attr(\"stroke\",\"white\");\n\n        let bars = chart\n            .selectAll('.bar')\n            .data(yearSlice, d => d.name);\n\n        bars\n            .enter()\n            .append('rect')\n            .attr('class', d => `bar ${d.name.replace(/\\s/g, '_')}`)\n            .attr('x', xScale(0) + 1)\n            .attr('width', d => xScale(d.value) - xScale(0) - 1)\n            .attr('y', d => yScale(top_n + 1) + 5)\n            .attr('height', yScale(1) - yScale(0) - barPadding)\n            .attr('fill', \"rgba(72,137,247,0.6)\")\n            .attr(\"stroke\",\"rgb(72,137,247)\")\n            .attr(\"stroke-width\",3)\n            .transition()\n            .duration(tickDuration)\n            .ease(d3.easeLinear)\n            .attr('y', d => yScale(d.rank) + 5);\n\n        bars.transition()\n            .duration(tickDuration)\n            .ease(d3.easeLinear)\n            .attr('width', d => xScale(d.value) - xScale(0) - 1)\n            .attr('y', d => yScale(d.rank) + 5);\n\n        bars.exit()\n            .transition()\n            .duration(tickDuration)\n            .ease(d3.easeLinear)\n            .attr('width', d => xScale(d.value) - xScale(0) - 1).attr('y', d => yScale(top_n + 1) + 50)\n            .remove();\n\n        let labels = chart.selectAll('.label')\n            .data(yearSlice, d => d.name);\n\n        labels.enter()\n            .append('text')\n            .attr('class', 'label')\n            .attr('x', d => xScale(d.value) - 8)\n            .attr('y', d => yScale(top_n + 1) + 5 + ((yScale(1) - yScale(0)) / 2))\n            .attr(\"fill\",\"white\")\n            .attr(\"font-family\",\"Open Sans\")\n            .style('text-anchor', 'end')\n            .html(d => d.name)\n            .transition()\n            .duration(tickDuration).ease(d3.easeLinear)\n            .attr('y', d => yScale(d.rank) + 5 + ((yScale(1) - yScale(0)) / 2) + 1);\n\n\n        labels.transition()\n            .duration(tickDuration)\n            .ease(d3.easeLinear)\n            .attr('x', d => xScale(d.value) - 8)\n            .attr('y', d => yScale(d.rank) + 5 + ((yScale(1) - yScale(0)) / 2) + 1);\n\n        labels.exit()\n            .transition()\n            .duration(tickDuration)\n            .ease(d3.easeLinear)\n            .attr('x', d => xScale(d.value) - 8)\n            .attr('y', d => yScale(top_n + 1) + 50)\n            .remove();\n\n\n        let valueLabels = chart.selectAll('.valueLabel')\n            .data(yearSlice, d => d.name);\n\n        valueLabels.enter()\n            .append('text')\n            .attr('class', 'valueLabel')\n            .attr('x', d => xScale(d.value) + 5)\n            .attr('y', d => yScale(top_n + 1) + 5)\n            .attr(\"fill\",\"white\")\n            .attr(\"font-family\",\"Open Sans\")\n            .text(d => d3.format(',.0f')(d.lastValue))\n            .transition()\n            .duration(tickDuration)\n            .ease(d3.easeLinear)\n            .attr('y', d => yScale(d.rank) + 5 + ((yScale(1) - yScale(0)) / 2) + 1);\n\n        valueLabels\n            .transition()\n            .duration(tickDuration)\n            .ease(d3.easeLinear)\n            .attr('x', d => xScale(d.value) + 5)\n            .attr('y', d => yScale(d.rank) + 5 + ((yScale(1) - yScale(0)) / 2) + 1)\n            .attr(\"fill\",\"white\")\n            .attr(\"font-family\",\"Open Sans\")\n            .tween(\"text\", function (d) {\n                let i = d3.interpolateRound(d.lastValue, d.value);\n                return function (t) {\n                    this.textContent = d3.format(',')(i(t));\n                };\n            });\n\n\n        valueLabels.exit()\n            .transition()\n            .duration(tickDuration)\n            .ease(d3.easeLinear)\n            .attr('x', d => xScale(d.value) + 5)\n            .attr('y', d => yScale(top_n + 1) + 50)\n            .remove();\n\n        yearText.html(~~ year);\n        if(year <= maxYear) {\n            year = d3.format('.1f')((+year) + 0.1);\n            handleCurrentYear(+year);\n        }\n    }, tickDuration);\n};\n","import React, {useEffect, useRef, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport companies from \"../../Data/companies_marketshare.csv\";\nimport { createTitles, createScales, createAxis, styleAxis, createBars, ticker } from \"./animated-bar-chart-utils\";\nconst BootCampFinalProjectAnimatedBarChartCompanies = ({play, currentYear, sliderYear, handleCurrentYear}) => {\n    const [data, setData] = useState(() => []);\n    const [isMounted, setIsMounted] = useState(() => false);\n    const [tickerInterval, setTickerInterval] = useState(() => undefined);\n    const animatedChartCompanies = useRef();\n    const margin = {\n        top: 16,\n        bottom: 16,\n        left: 1,\n        right: 80\n    };\n    let year = currentYear;\n    useEffect(() => {\n        const status = d3.csv(companies).then((dataset) => {\n            dataset.forEach(d => {\n                    d.value = +d.value;\n                    d.lastValue = +d.lastValue;\n                    d.value = isNaN(d.value) ? 0 : d.value;\n                    d.year = +d.year;\n                    d.colour = d3.hsl(Math.random() * 360, 0.75, 0.75);\n            });\n            setData(dataset);\n            return true;\n        }).catch(e => false);\n        setIsMounted(status.then(st => st))\n    },[]);\n\n    useEffect(() => {\n        if(tickerInterval && !play) {\n            tickerInterval.stop()\n        }\n    },[play, tickerInterval]);\n\n    useEffect(() => {\n        if(tickerInterval && currentYear > 2020) {\n            console.log(\"I'm stopping on current year companies\", currentYear);\n            tickerInterval.stop()\n        }\n    },[currentYear]);\n\n    useEffect(() => {\n        if(d3.select(\"#svgCanvas\")) {\n            d3.select(\"#svgCanvas\").remove();\n        }\n        if(isMounted && data.length > 0) {\n            const svgHeight = animatedChartCompanies.current.clientHeight;\n            const svgWidth = animatedChartCompanies.current.clientWidth;\n            const svg = d3\n                .select(animatedChartCompanies.current)\n                .append(\"svg\")\n                .attr(\"id\",\"svgCanvas\")\n                .attr(\"viewBox\", `0 0 ${svgWidth} ${svgHeight}`);\n            const chartWidth = d3\n                .select(\"#svgCanvas\").node().getBoundingClientRect().width - margin.left - margin.right;\n            const chartHeight = svgHeight - margin.top - margin.bottom;\n            const chart = svg\n                .append(\"g\")\n                .attr(\"id\", \"chart\")\n                .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n            const tickDuration = 1500;\n            const top_n = 12\n            const barPadding = (svgHeight - (margin.bottom + margin.top)) / (top_n * 5);\n            const maxYear = d3.max(data, d => d.year);\n            let yearSlice = data.filter(d => d.year == year && !isNaN(d.value)).sort((a, b) => b.value - a.value).slice(0, top_n);\n            yearSlice.forEach((d, i) => d.rank = i);\n            const { xScale, yScale } = createScales(yearSlice, chartHeight, chartWidth, top_n, margin);\n            const xAxis = createAxis(xScale, chartHeight, chartWidth, margin, chart);\n            createBars(chart, yearSlice, xScale, yScale, barPadding);\n            const { yearText } = styleAxis(chart, chartWidth, chartHeight, year);\n            if(play) {\n                const tick = ticker(yearSlice, data, xScale, yScale, xAxis, barPadding, yearText, top_n, chart, tickDuration, year, handleCurrentYear, maxYear, \"companies\");\n                setTickerInterval(tick);\n            }\n        }\n    },[data, play]);\n\n    useEffect(() => {\n        if(tickerInterval) {\n            tickerInterval.stop();\n        }\n        if(d3.select(\"#svgCanvas\")) {\n            d3.select(\"#svgCanvas\").remove();\n        }\n        if(isMounted && data.length > 0) {\n            const svgHeight = animatedChartCompanies.current.clientHeight;\n            const svgWidth = animatedChartCompanies.current.clientWidth;\n            const svg = d3\n                .select(animatedChartCompanies.current)\n                .append(\"svg\")\n                .attr(\"id\", \"svgCanvas\")\n                .attr(\"viewBox\", `0 0 ${svgWidth} ${svgHeight}`);\n\n            const chartWidth = d3\n                .select(\"#svgCanvas\").node().getBoundingClientRect().width - margin.left - margin.right;\n            const chartHeight = svgHeight - margin.top - margin.bottom;\n            const chart = svg\n                .append(\"g\")\n                .attr(\"id\", \"chart\")\n                .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n            const top_n = 12\n            const barPadding = (chartHeight - (margin.bottom + margin.top)) / (top_n * 5);\n            let yearSlice = data.filter(d => d.year == year && !isNaN(d.value)).sort((a, b) => b.value - a.value).slice(0, top_n);\n            yearSlice.forEach((d, i) => d.rank = i);\n            const {xScale, yScale} = createScales(yearSlice, chartHeight, chartWidth, top_n, margin);\n            const xAxis = createAxis(xScale, chartHeight, chartWidth, margin, chart)\n            createBars(chart, yearSlice, xScale, yScale, barPadding);\n            const {yearText} = styleAxis(chart, chartWidth, chartHeight, year);\n        }\n    },[sliderYear]);\n\n    return <div id=\"animated-bar-chart\" style={{position: \"relative\", height: \"50%\"}} ref={animatedChartCompanies} />\n};\n\nexport default BootCampFinalProjectAnimatedBarChartCompanies;","import React, {useEffect, useRef, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport companies from \"../../Data/countries_values.csv\";\nimport {createAxis, createBars, createScales, createTitles, styleAxis, ticker} from \"./animated-bar-chart-utils\";\n\nconst BootCampFinalProjectAnimatedBarChartCountries = ({play, currentYear, sliderYear, handleCurrentYear}) => {\n    const [data, setData] = useState(() => []);\n    const [isMounted, setIsMounted] = useState(() => false);\n    const [tickerInterval, setTickerInterval] = useState(() => undefined);\n    const animatedChartCountries = useRef();\n    const margin = {\n        top: 16,\n        bottom: 16,\n        left: 1,\n        right: 80\n    };\n    let year = currentYear;\n    useEffect(() => {\n        const status = d3.csv(companies).then((dataset) => {\n            console.log(\"Dataset\", dataset);\n            dataset.forEach(d => {\n                d.value = +d.value;\n                d.lastValue = +d.lastValue;\n                d.value = isNaN(d.value) ? 0 : d.value;\n                d.year = +d.year;\n                d.colour = d3.hsl(Math.random() * 360, 0.75, 0.75);\n            });\n            setData(dataset);\n            return true;\n        }).catch(e => false);\n        setIsMounted(status.then(st => st))\n    },[]);\n\n    useEffect(() => {\n        if(tickerInterval && !play) {\n            tickerInterval.stop()\n        }\n    },[play, tickerInterval]);\n\n    useEffect(() => {\n        if(tickerInterval && currentYear > 2018) {\n            console.log(\"I'm stopping on current year companies\", currentYear);\n            tickerInterval.stop()\n        }\n    },[currentYear]);\n\n    useEffect(() => {\n        if(d3.select(\"#svgCanvas2\")) {\n            d3.select(\"#svgCanvas2\").remove();\n        }\n        if(isMounted && data.length > 0) {\n            console.log(\"Render chart\")\n        }\n        const svgHeight = animatedChartCountries.current.clientHeight;\n        const svgWidth = animatedChartCountries.current.clientWidth;\n        const svg = d3\n            .select(animatedChartCountries.current)\n            .append(\"svg\")\n            .attr(\"id\",\"svgCanvas2\")\n            .attr(\"viewBox\", `0 0 ${svgWidth} ${svgHeight}`);\n        const chartWidth = d3\n            .select(\"#svgCanvas2\").node().getBoundingClientRect().width - margin.left - margin.right;\n        const chartHeight = svgHeight - margin.top - margin.bottom;\n        const chart = svg\n            .append(\"g\")\n            .attr(\"id\", \"chart\")\n            .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n        const tickDuration = 1500;\n        const top_n = 12\n        const barPadding = (chartHeight - (margin.bottom + margin.top)) / (top_n * 5);\n        const caption = svg\n            .append('text')\n            .attr('class', 'caption')\n            .attr('x', svgWidth)\n            .attr('y', svgHeight - 5)\n            .style('text-anchor', 'end');\n        const maxYear = d3.max(data, d => d.year);\n        console.log(\"Max Year Countries\",maxYear);\n        let yearSlice = data.filter(d => d.year == year && !isNaN(d.value)).sort((a, b) => b.value - a.value).slice(0, top_n);\n        yearSlice.forEach((d, i) => d.rank = i);\n        const { xScale, yScale } = createScales(yearSlice, chartHeight, chartWidth, top_n, margin);\n        const xAxis = createAxis(xScale, chartHeight, chartWidth, margin, chart);\n        createBars(chart, yearSlice, xScale, yScale, barPadding);\n        const { yearText } = styleAxis(chart, chartWidth, chartHeight, year);\n\n        if(play) {\n            const tick = ticker(yearSlice, data, xScale, yScale, xAxis, barPadding, yearText, top_n, chart, tickDuration, year, handleCurrentYear, maxYear);\n            setTickerInterval(tick);\n        }\n    },[data,play]);\n\n    useEffect(() => {\n        if(tickerInterval) {\n            tickerInterval.stop();\n        }\n        if(d3.select(\"#svgCanvas2\")) {\n            d3.select(\"#svgCanvas2\").remove();\n        }\n        if(isMounted && data.length > 0) {\n            const svgHeight = animatedChartCountries.current.clientHeight;\n            const svgWidth = animatedChartCountries.current.clientWidth;\n\n            const svg = d3\n                .select(animatedChartCountries.current)\n                .append(\"svg\")\n                .attr(\"id\", \"svgCanvas2\")\n                .attr(\"viewBox\", `0 0 ${svgWidth} ${svgHeight}`);\n            const chartWidth = d3\n                .select(\"#svgCanvas2\").node().getBoundingClientRect().width - margin.left - margin.right;\n            const chartHeight = svgHeight - margin.top - margin.bottom;\n            const chart = svg\n                .append(\"g\")\n                .attr(\"id\", \"chart\")\n                .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n            const top_n = 12\n            const barPadding = (chartHeight - (margin.bottom + margin.top)) / (top_n * 5);\n            createTitles(svg, margin);\n            let yearSlice = data.filter(d => d.year == year && !isNaN(d.value)).sort((a, b) => b.value - a.value).slice(0, top_n);\n            yearSlice.forEach((d, i) => d.rank = i);\n            const {xScale, yScale} = createScales(yearSlice, chartHeight, chartWidth, top_n, margin);\n            const xAxis = createAxis(xScale, chartHeight, chartWidth, margin, chart)\n            createBars(chart, yearSlice, xScale, yScale, barPadding);\n            const {yearText} = styleAxis(chart, chartWidth, chartHeight, year);\n        }\n    },[sliderYear]);\n\n\n      return (\n          <div id=\"animated-bar-chart\" style={{position: \"relative\", height: \"50%\"}} ref={animatedChartCountries} />\n      );\n};\n\nexport default BootCampFinalProjectAnimatedBarChartCountries;","import React, {useEffect} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst styles = makeStyles((theme) => ({\n    track: {\n        color: \"rgb(72,137,247)\",\n    }\n}));\nconst NonLinearSlider = ({sliderYear, handleSliderYear, minValue, maxValue}) => {\n    const classes = styles();\n    const handleChange = (event, newValue) => {\n        handleSliderYear(newValue);\n    };\n\n    useEffect(() => {\n        console.log(\"Current Year in Slider\", sliderYear);\n    },[sliderYear]);\n\n    return (\n        <div style={{width: \"100%\"}}>\n            <Typography id=\"non-linear-slider\" gutterBottom style={{color: \"white\", fontFamily: \"Open Sans\"}}>\n                Year\n            </Typography>\n            <Slider\n                value={sliderYear}\n                min={minValue}\n                step={0.1}\n                max={maxValue}\n                scale={(x) => x}\n                onChange={handleChange}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"non-linear-slider\"\n                className={classes.track}\n            />\n        </div>\n    );\n};\n\nexport default NonLinearSlider;","import React, {useContext, useEffect, useState} from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport BootCampFinalProjectAnimatedBarChartCompanies from \"../AnimatedBarchartCompanies/animated-bar-chart-companies\";\nimport BootCampFinalProjectAnimatedBarChartCountries from \"../AnimatedBarchartCompanies/animated-bar-chart-countries\";\nimport Button from \"@material-ui/core/Button\";\nimport NonLinearSlider from \"../../Shared/Slider/slider\";\nimport {Typography} from \"@material-ui/core\";\nimport {BootcampAppContext} from \"../../Shared/AppSession/app-context\";\n\nconst BootcampFinalProjectTechHistory = () => {\n    const [playCompanies,setPlayCompanies] = useState(() => false);\n    const [currentYearCompanies, setCurrentYearCompanies] = useState(() => 1998);\n    const [sliderYearCompanies, setSliderYearCompanies] = useState(() => 1998);\n    const [playCountries, setPlayCountries] = useState(() => false);\n    const [currentYearCountries, setCurrentYearCountries] = useState(() => 1996);\n    const [sliderYearCountries, setSliderYearCountries] = useState(() => 1996);\n    const handleTogglePlayCompanies = () => {\n        setPlayCompanies(!playCompanies);\n    };\n    const handleTogglePlayCountries = () => {\n        setPlayCountries(!playCountries);\n    };\n    const handleCurrentYearCompanies = (year) => {\n        setCurrentYearCompanies(year);\n    };\n    const handleCurrentYearCountries = (year) => {\n        setCurrentYearCountries(year);\n    };\n    const handleSliderYearCompanies = (year) => {\n        setPlayCompanies(false);\n        setSliderYearCompanies(year);\n        setCurrentYearCompanies(year);\n    };\n    const handleSliderYearCountries = (year) => {\n        setPlayCountries(false);\n        setSliderYearCountries(year);\n        setCurrentYearCountries(year);\n    };\n    const handleResetYearCompanies = () => {\n        setPlayCompanies(false);\n        setCurrentYearCompanies(1998);\n        setSliderYearCompanies(1998);\n    };\n    const handleResetYearCountries = () => {\n        setPlayCountries(false);\n        setCurrentYearCountries(1996);\n        setSliderYearCountries(1996);\n    };\n    return (\n        <Grid item container spacing={2} style={{height: \"100%\", width: \"100%\", padding: \"16px 32px\", textAlign: \"left\"}}>\n            <Grid item xs={6}>\n                <Typography variant=\"h5\" style={{color: \"white\", fontFamily: \"Open Sans\"}}>Most Valuable Companies By Market Cap from 2005-2020</Typography>\n                <Typography variant=\"h6\" style={{color: \"white\", fontFamily: \"Open Sans\", marginBottom: \"16px\"}}>Market Capitalization, $mm - Source: Bloomberg</Typography>\n                <NonLinearSlider\n                    sliderYear={sliderYearCompanies}\n                    handleSliderYear={handleSliderYearCompanies}\n                    minValue={1998}\n                    maxValue={2020}\n                />\n                {\n                    currentYearCompanies < 2020 ? (\n                        <Button\n                            variant=\"contained\"\n                            onClick={handleTogglePlayCompanies}\n                            style={{marginRight: \"16px\", backgroundColor: \"rgba(72,137,247,0.6)\", border: \"1px solid rgb(72,137,247)\", color: \"white\"}}>\n                            {playCompanies ? \"Pause\" : \"Play\"}\n                        </Button>\n                    ) : \"\"\n                }\n                {\n                    playCompanies || currentYearCompanies === 2020 ? (\n                        <Button\n                            variant=\"contained\"\n                            onClick={handleResetYearCompanies}\n                            style={{backgroundColor: \"rgba(72,137,247,0.6)\", border: \"1px solid rgb(72,137,247)\", color: \"white\"}}>\n                            Reset\n                        </Button>\n                    ): \"\"\n                }\n                <div style={{height: \"100%\", width: \"100%\"}}>\n                    <BootCampFinalProjectAnimatedBarChartCompanies\n                        play={playCompanies}\n                        currentYear={currentYearCompanies}\n                        sliderYear={sliderYearCompanies}\n                        handleCurrentYear={handleCurrentYearCompanies}\n                    />\n                </div>\n            </Grid>\n            <Grid item xs={6}>\n                <Typography variant=\"h5\" style={{color: \"white\", fontFamily: \"Open Sans\"}}>Countries With the Most Investment in Technology</Typography>\n                <Typography variant=\"h6\" style={{color: \"white\", fontFamily: \"Open Sans\", marginBottom: \"16px\"}}>Investment in Technology as % of GDP, % - Source: World Bank</Typography>\n                <NonLinearSlider\n                    sliderYear={sliderYearCountries}\n                    handleSliderYear={handleSliderYearCountries}\n                    minValue={1996}\n                    maxValue={2018}\n                />\n                {\n                    currentYearCountries < 2018 ? (\n                        <Button\n                            variant=\"contained\"\n                            onClick={handleTogglePlayCountries}\n                            style={{marginRight: \"16px\", backgroundColor: \"rgba(72,137,247,0.6)\", border: \"1px solid rgb(72,137,247)\", color: \"white\"}}>\n                            {playCountries ? \"Pause\" : \"Play\"}\n                        </Button>\n                    ) : \"\"\n                }\n                {\n                    playCountries || currentYearCountries === 2018 ? (\n                        <Button\n                            variant=\"contained\"\n                            onClick={handleResetYearCountries}\n                            style={{backgroundColor: \"rgba(72,137,247,0.6)\", border: \"1px solid rgb(72,137,247)\", color: \"white\"}}>\n                            Reset\n                        </Button>\n                    ): \"\"\n                }\n                <div style={{height: \"100%\", width: \"100%\"}}>\n                    <BootCampFinalProjectAnimatedBarChartCountries\n                        play={playCountries}\n                        currentYear={currentYearCountries}\n                        sliderYear={sliderYearCountries}\n                        handleCurrentYear={handleCurrentYearCountries}\n                    />\n                </div>\n            </Grid>\n        </Grid>\n    )\n};\n\nexport default BootcampFinalProjectTechHistory;","import React, {useContext, useEffect, useState} from \"react\";\nimport {BootcampAppContext} from \"../../Shared/AppSession/app-context\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {Grid} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n    root: {\n        backgroundColor: \"rgba(72,137,247,0.6)\",\n        border: \"3px solid rgb(72,137,247)\"\n    },\n    bodyHeader: {\n        color: \"white\",\n        fontSize: \"16px\",\n        fontFamily: \"Open Sans\",\n        fontWeight: 700\n    },\n    bodyCell: {\n        color: \"white\",\n        fontSize: \"14px\",\n        fontFamily: \"Open Sans\",\n        fontWeight: 400\n    }\n});\n\nconst createData = (mlData) => ({\n    \"year\": mlData[\"year\"],\n    \"value\": mlData[\"value\"],\n    \"t-1\": mlData[\"t-1\"],\n    \"t-1_Diff\": mlData[\"t-1_Diff\"],\n    \"t-2\": mlData[\"t-2\"],\n    \"t-2_Diff\": mlData[\"t-2_Diff\"]\n});\n\nconst BootcampFinalProjectMLTable = ({mlData}) => {\n\n    const [rows, setRows] = useState(() => []);\n    const classes = useStyles();\n    useEffect(() => {\n        if(mlData.length > 0) {\n            setRows(() => mlData.map(mlD => createData(mlD)));\n        }\n    },[mlData]);\n    return (\n        <div style={{width: \"100%\", height: \"auto\", margin: \"0 auto\"}}>\n        <TableContainer component={Paper} className={classes.root}>\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"left\" className={classes.bodyHeader}>Year</TableCell>\n                        <TableCell align=\"left\" className={classes.bodyHeader}>Value</TableCell>\n                        <TableCell align=\"left\" className={classes.bodyHeader}>T-1</TableCell>\n                        <TableCell align=\"left\" className={classes.bodyHeader}>T-1 Diff</TableCell>\n                        <TableCell align=\"left\" className={classes.bodyHeader}>T-2</TableCell>\n                        <TableCell align=\"left\" className={classes.bodyHeader}>T-2 Diff</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map((row) => (\n                        <TableRow key={row.year}>\n                            <TableCell component=\"th\" scope=\"row\" className={classes.bodyHeader}>\n                                {row[\"year\"]}\n                            </TableCell>\n                            <TableCell align=\"left\" className={classes.bodyCell}>{row[\"value\"].toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</TableCell>\n                            <TableCell align=\"left\" className={classes.bodyCell}>{row[\"t-1\"].toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</TableCell>\n                            <TableCell align=\"left\" className={classes.bodyCell}>{row[\"t-1_Diff\"].toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</TableCell>\n                            <TableCell align=\"left\" className={classes.bodyCell}>{row[\"t-2\"].toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</TableCell>\n                            <TableCell align=\"left\" className={classes.bodyCell}>{row[\"t-2_Diff\"].toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n        </div>\n    );\n};\n\nexport default BootcampFinalProjectMLTable;","import React, {useContext, useEffect} from \"react\";\nimport {Button, Grid, Typography} from \"@material-ui/core\";\nimport BootcampFinalProjectMLTable from \"./ml-table\";\nimport {BootcampAppContext} from \"../../Shared/AppSession/app-context\";\n\nconst BootcampFinalProjectMLTableContainer = () => {\n    const { getLastYear, predictNewYear, mlData,  } = useContext(BootcampAppContext);\n    useEffect(() => {\n        console.log(\"Hello!\");\n        getLastYear();\n    },[]);\n    const handlePredictNewYear = () => {\n        predictNewYear(mlData[0]);\n    }\n    return (\n        <Grid container spacing={0}>\n            <Grid item xs={12} style={{padding: \"10%\"}}>\n                <div style={{display: \"flex\", alignItems: \"center\", marginBottom: \"16px\"}}>\n                    <Typography variant=\"h5\" style={{color: \"white\", fontFamily: \"Open Sand\", textAlign: \"left\", flexGrow: \"1\"}}>Microprocessors Clock Speed ML</Typography>\n                    {\n                        mlData.length === 1 ? (\n                            <Button style={{fontFamily: \"Open Sans\", marginLeft: \"16px\", backgroundColor: \"rgba(72,137,247,0.6)\", border: \"1px solid rgb(72,137,247)\", color: \"white\"}} variant=\"contained\" onClick={handlePredictNewYear}>Predict 2017</Button>\n                        ) : \"\"\n                    }\n                </div>\n\n                <BootcampFinalProjectMLTable mlData={mlData}/>\n            </Grid>\n        </Grid>\n    )\n};\n\nexport default BootcampFinalProjectMLTableContainer;","import React, {useContext, useEffect, useState} from 'react';\nimport { Redirect, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport BootcampFinalProjectMenuDrawer from \"./Shared/Menu/menu\";\nimport BootcampFinalProjectStartupDashboard from \"./Components/StartupDahsboard/startup-dashboard\";\nimport BootcampFinalProjectTechHistory from \"./Components/TechHistory/tech-history\";\nimport BootcampFinalProjectMLTableContainer from \"./Components/MLTable/ml-table-container\";\nimport Grid from \"@material-ui/core/Grid\";\nfunction App() {\n  return (\n    <div className=\"App\" style={{backgroundColor: \"rgb(36, 36, 36)\", height: \"100vh\"}}>\n        <Grid container spacing={0} style={{height: \"100%\"}}>\n            <Grid item xs={12}>\n                <BootcampFinalProjectMenuDrawer />\n            </Grid>\n            <Switch>\n                <Redirect exact from=\"/\" to=\"/ml-table\" />\n                <Route path=\"/tech-history\" exact>\n                    <BootcampFinalProjectTechHistory />\n                </Route>\n                <Route path=\"/startup-dashboard\" exact>\n                    <BootcampFinalProjectStartupDashboard />\n                </Route>\n                <Route path=\"/ml-table\" exact>\n                    <BootcampFinalProjectMLTableContainer />\n                </Route>\n            </Switch>\n        </Grid>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport {BrowserRouter as Router } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport BootcampFinalProjectContextProvider from \"./Shared/AppSession/app-context\";\n\nReactDOM.render(\n  // <React.StrictMode>\n      <BootcampFinalProjectContextProvider>\n          <Router>\n         <App />\n          </Router>\n      </BootcampFinalProjectContextProvider>,\n// </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}