{"version":3,"sources":["Constants/app-constants.js","Shared/AppSession/app-context.js","Utils/services.js","Components/Map/map.js","Components/PieChart/pie.js","Components/TreemapChart/treemap-utils.js","Components/TreemapChart/treemap.js","Shared/Menu/appbar.js","Shared/Menu/menu.js","App.js","serviceWorker.js","index.js"],"names":["MAPBOX_API_URL","BootcampAppContext","createContext","undefined","BootcampFinalProjectContextProvider","props","useState","startupDir","setStartupDir","getStartupDirs","a","axios","get","then","jsonResponse","data","catch","e","alert","dir","Provider","value","world","addStartupInfoToCountry","feature","layer","name","properties","startupsFound","startups","filter","stp","hq","console","log","length","startupContent","i","desc","ceo","foundedDate","id","investors","label","market","sector","stage","bindPopup","autoPan","filterStartupsLATAM","children","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","BootcampFinalProjectMap","state","lat","lng","maxBoundsViscosity","dragging","zoom","minZoom","maxZoom","setState","MapStateHandler","useContext","position","Map","center","maxBounds","class","TileLayer","attribution","url","GeoJSON","onEachFeature","BootcampFinalProjectStartupTypePieChart","setData","isMounted","setIsMounted","pieRef","useRef","useEffect","startupSectorsCount","map","reduce","acc","currentVal","idx","Array","isArray","foundIndex","findIndex","obj","newObj","count","slice","formatPercent","d3","remove","currentAngle","minimumStepAngle","Math","PI","f","val","pieArcData","d","newAngle","set","index","startAngle","endAngle","padAngle","svgWidth","current","clientWidth","total","margin","top","bottom","left","right","chartWidth","chartHeight","pie","append","attr","arcPie","innerRadius","outerRadius","padRadius","cornerRadius","tooltip","d3Tip","style","offset","html","selectAll","join","classed","on","show","hide","each","text","_d","centroid","toLocaleString","call","height","backgroundColor","ref","onlyUnique","self","indexOf","BootCampFinalProjectStartupTreemapChart","treemapChart","vcsByCountry","valHQ","trim","countriesValVCs","split","inv","accHQ","countriesAccVCs","vcs","vcsByCountryForTreemap","Object","keys","key","parent","getAllVcsByCountry","svgHeight","clientHeight","svg","node","getBoundingClientRect","width","chart","root","parentId","sum","size","leaves","enter","x0","y0","x1","y1","useStyles","makeStyles","theme","flexGrow","menuButton","marginRight","spacing","title","colorPrimary","colorInherit","color","ButtonAppBar","toggleDrawer","classes","className","AppBar","Toolbar","Button","onClick","IconButton","edge","aria-label","Typography","variant","list","fullList","BootcampFinalProjectMenuDrawer","open","setOpen","status","event","Drawer","anchor","onClose","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","App","dataFetched","setDataFetched","Grid","container","item","xs","md","padding","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4db35b28.chunk.js","sourcesContent":["const acessToken = \"pk.eyJ1IjoiZ3VndW5uZXIiLCJhIjoiY2tjbWxoamwzMDJmajJ4cWtsNHN6NjJkNiJ9.gTU76mp1kS4Rn7Kh5h67EQ\";\nconst MAPBOX_API_URL = `https://api.mapbox.com/styles/v1/gugunner/ckdnjzx3i2ca61jmvld4f035x/tiles/256/{z}/{x}/{y}@2x?access_token=${acessToken}`;\n// const API_DEV_URL = \"http://localhost:5000/bootcamp-final-project/api/\";\nconst API_DEV_URL = \"https://bootcamp-final-project-app.herokuapp.com/bootcamp-final-project/api/\"\nexport {\n    acessToken,\n    MAPBOX_API_URL,\n    API_DEV_URL\n};","import React, {createContext, useState} from \"react\";\nimport ReactDOMServer from 'react-dom/server';\nimport world from \"../../Data/custom_world.geo.json\";\nimport { getAllStartups } from \"../../Utils/services\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nexport const BootcampAppContext = createContext(undefined);\n\nconst BootcampFinalProjectContextProvider = (props) => {\n    const [startupDir, setStartupDir] = useState(() => []);\n\n    const filterStartupsLATAM = (feature, layer) => {\n        const { name } = feature.properties;\n        const startupsFound = startupDir.startups.filter(stp => stp.hq === name );\n        console.log(\"Startups Found\",startupsFound);\n        const popupOptions = {\n           autoPan: false\n        };\n        // ceo: \"Luis Caviglia, Juan Ignacio Caviglia\"\n        // desc: \"Saas platform focused on high-end restaurant management.\"\n        // foundedDate: \"2016\"\n        // hq: \"Uruguay\"\n        // id: \"5f497a74dafc926de6b32f75\"\n        // investors: \"Andreessen Horowitz\"\n        // label: \"None\"\n        // market: \"Uruguay, United States\"\n        // name: \"MEITRE\"\n        // sector: \"SaaS\"\n        // stage: \"Seed/Incubator\"\n        if(startupsFound.length > 0) {\n            let startupContent = \"\";\n            for(let i = 0; i < startupsFound.length; i++) {\n                const {ceo, desc, foundedDate, hq, id, investors, label, market, name, sector, stage} = startupsFound[i];\n                const startupString = `<tr>\n                                            <td>${name}</td>\n                                            <td>${desc}</td>\n                                            <td>${sector}</td>\n                                            <td>${stage}</td>\n                                        </tr>`;\n                startupContent += startupString;\n            }\n            startupContent = `<div class=\"startup-table\">\n                                <h3 class=\"sticky-country-header\">Startups funded in ${name}</h3>\n                                <table>\n                                    <thead>\n                                        <tr>\n                                            <th class=\"sticky-header\">Name</th>\n                                            <th class=\"sticky-header\">Description</th>\n                                            <th class=\"sticky-header\">Sector</th>\n                                            <th class=\"sticky-header\">Stage</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        ${startupContent}\n                                    </tbody>\n                                </table>\n                            </div>`\n            layer.bindPopup(startupContent,popupOptions);\n        }\n    };\n\n    const addStartupInfoToCountry = (feature, layer) => {\n        filterStartupsLATAM(feature, layer);\n    };\n\n    const getStartupDirs = async() => {\n        const dir = await getAllStartups();\n        if(dir) {\n            setStartupDir(dir);\n        }\n    };\n\n    return (\n        <BootcampAppContext.Provider value={{\n            world,\n            addStartupInfoToCountry,\n            startupDir,\n            getStartupDirs\n        }}>\n            {props.children}\n        </BootcampAppContext.Provider>\n    )\n};\n\nexport default BootcampFinalProjectContextProvider;","import { API_DEV_URL } from \"../Constants/app-constants\";\nimport axios from \"axios\";\n\nexport const getAllStartups = () => {\n    return axios.get(`${API_DEV_URL}startups`).then(jsonResponse => {\n        return jsonResponse ? jsonResponse.data : false;\n    }).catch(e => {\n        alert(\"Startup directory could not be loaded\")\n    return false\n    });\n};\n\n","import React, {useContext, useEffect, useState} from \"react\";\nimport { Map, TileLayer, GeoJSON } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { BootcampAppContext } from \"../../Shared/AppSession/app-context\";\n// import * as d3 from \"d3\";\nimport { MAPBOX_API_URL } from \"../../Constants/app-constants\";\nimport * as bounds from \"leaflet\";\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\nconst MapStateHandler = () => {\n    const [state, setState] = useState(() => ({\n        lat: 38.2307,\n        lng: -101.5887,\n        maxBoundsViscosity: 1.0,\n        dragging: false,\n        zoom: 2,\n        minZoom: 2,\n        maxZoom: 2\n    }));\n    return { state, setState};\n};\n\nconst BootcampFinalProjectMap = () => {\n    const { state } = MapStateHandler();\n    const { startupDir, world, addStartupInfoToCountry } = useContext(BootcampAppContext);\n    const position = [state.lat, state.lng];\n    return (\n        <Map\n            center={position}\n            zoom={state.zoom}\n            minZoom={state.minZoom}\n            maxZoom={state.maxZoom}\n            maxBounds={state.maxBounds}\n            maxBoundsViscosity={state.maxBoundsViscosity}\n            dragging={state.dragging}\n            class=\"project-map\">\n            <TileLayer\n                attribution='Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>'\n                url={MAPBOX_API_URL}\n            />\n            {\n                startupDir.startups ?\n                <GeoJSON data={world} onEachFeature={addStartupInfoToCountry}/> : \"\"\n            }\n\n        </Map>\n    )\n};\n\nexport default BootcampFinalProjectMap;","import React, {useContext, useEffect, useRef, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport d3Tip from \"d3-tip\";\nimport {BootcampAppContext} from \"../../Shared/AppSession/app-context\";\nconst BootcampFinalProjectStartupTypePieChart = () => {\n  const { startupDir } = useContext(BootcampAppContext);\n  const [data, setData] = useState(() => []);\n  const [isMounted, setIsMounted] = useState(() => false);\n  const pieRef = useRef();\n\n  useEffect(() => {\n    if(!isMounted) {\n      setIsMounted(true);\n    }\n  },[data]);\n\n  useEffect(() => {\n    if(startupDir.startups) {\n      const { startups } = startupDir;\n      const startupSectors =  startups.map(stp => stp.sector);\n      const startupSectorsCount = startupSectors.reduce((acc,currentVal,idx) => {\n        if(typeof acc !== \"string\" && Array.isArray(acc)) {\n          const foundIndex = acc.findIndex(obj => {\n            return obj.name === currentVal\n          });\n          if(foundIndex !== -1) {\n            const newObj = { name: acc[foundIndex].name, count: acc[foundIndex].count +1 };\n            return foundIndex === 0 ? [newObj,...acc.slice(1)] : [...acc.slice(0,foundIndex),newObj,...acc.slice(foundIndex+1)];\n          } else {\n            return [...acc,{ name: currentVal, count: 1 }];\n          }\n        }\n        if(currentVal === acc) {\n          return [{ name: currentVal, count: 2 }];\n        } else {\n          return [{ name: acc, count: 1 }, {name: currentVal, count: 1}];\n        }\n\n      })\n      setData(startupSectorsCount);\n    }\n  },[startupDir]);\n\n  const formatPercent = d3.format(\".2%\");\n\n  useEffect(() => {\n    if(d3.select(\"#svgCanvas\")) {\n      d3.select(\"#svgCanvas\").remove();\n    }\n    if(isMounted && data.length > 0) {\n\n      let currentAngle = 0;\n      const minimumStepAngle =\n          (Math.PI * 2) / data.map(f => f.count).reduce((acc, val) => acc + val);\n      const dataset = data.map((d, idx) => {\n        const newAngle = d.count * minimumStepAngle;\n        const set = {\n          data: {\n            name: d.name,\n            count: d.count\n          },\n          index: idx,\n          value: d.count,\n          startAngle: currentAngle,\n          endAngle: newAngle + currentAngle,\n          padAngle: 0\n        };\n        currentAngle += newAngle;\n        return set;\n      });\n\n//dataset equal to pieArcData\n      const pieArcData = d3.pie().value(d => d.count)(data);\n      const svgHeight = 800;\n      const svgWidth = pieRef.current.clientWidth*1.8;\n      const total = data.reduce((acc,val,idx) => idx === 1 ? acc.count+val.count : acc+val.count);\n      const margin = {\n        top: 50,\n        bottom: 30,\n        left: 30,\n        right: 30\n      };\n\n      const chartWidth = svgWidth - margin.left - margin.right;\n      const chartHeight = svgHeight - margin.top - margin.bottom;\n\n      const svg = d3\n          .select(pieRef.current)\n          .append(\"svg\")\n          .attr(\"viewBox\", `0 0 ${svgWidth} ${svgHeight}`);\n\n      const pie = svg\n          .append(\"g\")\n          .attr(\"transform\", `translate(${chartWidth / 2},${chartHeight/2 + margin.top})`);\n\n      const arcPie = d3\n          .arc()\n          .innerRadius(110)\n          .outerRadius(310)\n          .padRadius(300)\n          .padAngle(4 / 300)\n          .cornerRadius(8);\n\n      const tooltip = d3Tip()\n          .attr(\"class\",\"tooltip\")\n          .style(\"background-color\",\"rgb(36,36,36)\")\n          .style(\"font-size\",\"12px\")\n          .style(\"font-family\",\"Open Sans\")\n          .style(\"padding\",\"8px\")\n          .style(\"color\",\"white\")\n          .style(\"width\",\"120px\")\n          .style(\"height\",\"80px\")\n          .style(\"text-align\",\"center\")\n          .style(\"border\",\"1px solid rgba(72,137,247,0.6)\")\n          .offset([50,50])\n          .html(d => `\n                    <div>\n                        <h4 style=\"margin: 4px\">Sector</h4>\n                        <h5 style=\"margin: 4px\">${d.data.name}</h5>\n                        <p style=\"font-family: 'Open Sans'; text-align: center ; margin: 8px\">${formatPercent(d.data.count/total)}</p>\n                    </div>`);\n\n      pie\n          .selectAll(\"path\")\n          .data(pieArcData)\n          .join(\"path\")\n          .classed(\"startup-path\",true)\n          .attr(\"d\", (d, idx) => arcPie(d))\n          .attr(\"id\", d=>  d.data.name)\n          .attr(\"fill\", \"rgba(72,137,247,0.6)\")\n          .attr(\"stroke\",\"rgb(72,137,247)\")\n          .attr(\"stroke-width\",\"3\")\n          .style(\"cursor\",\"pointer\")\n          .on(\"mouseover\", tooltip.show)\n          .on(\"mouseout\", tooltip.hide);\n\n\n      pie\n          .selectAll(\"path\")\n          .data(pieArcData)\n          .each(function(d) {\n            const data = d;\n            const text = pie\n                .append(\"text\")\n                .attr(\"fill\", \"white\")\n                .attr(\"text-anchor\", \"middle\")\n                .style(\"text-anchor\", \"middle\")\n                .attr(\"dy\", \".50em\")\n                .attr(\"transform\", () => {\n                  var _d = arcPie.centroid(data);\n                  _d[0] *= 1.5;\n                  _d[1] *= 1.5;\n                  return \"translate(\" + _d + \")\";\n                });\n\n            text\n                .append(\"tspan\")\n                .attr(\"font-size\", \"24\")\n                .text(data.value.toLocaleString(\"en\") > 1 ? data.data.name : \"\");\n\n            text\n                .append(\"tspan\")\n                .attr(\"x\", \"0\")\n                .attr(\"font-size\", \"20\")\n                .attr(\"font-weight\",700)\n                .attr(\"dy\", \"1.3em\")\n                .text(data.value.toLocaleString(\"en\") > 5 ? `${data.value.toLocaleString(\"en\")} (${formatPercent(data.data.count/total)})` : \"\");\n            pie.call(tooltip);\n          });\n    }\n  },[data])\n\n  return (\n      <div id=\"startup-types-chart\" style={{position: \"relative\", height: \"100%\", backgroundColor: \"rgb(36,36,36)\"}} ref={pieRef} />\n  )\n};\n\nexport default BootcampFinalProjectStartupTypePieChart;","\nconst onlyUnique = (val, idx, self) => {\n    return self.indexOf(val) === idx;\n}\n\nexport const getAllVcsByCountry = (startups) => {\n    const vcsByCountry = startups.reduce((acc, val, idx) => {\n        const valHQ = val.hq.trim();\n        const countriesValVCs = val.investors.split(\",\").map(inv => inv.trim());\n        if(idx === 1) {\n            const accHQ = acc.hq.trim();\n            const countriesAccVCs = acc.investors.split(\",\").map(inv => inv.trim());\n\n            let vcs = {};\n            vcs = { ...vcs, [accHQ]:  vcs[accHQ] ? [...vcs[accHQ], ...countriesAccVCs].filter(onlyUnique) : countriesAccVCs };\n            vcs = { ...vcs, [valHQ]: vcs[valHQ] ? [...vcs[valHQ] , ...countriesValVCs].filter(onlyUnique) : countriesValVCs };\n            return vcs;\n        };\n\n        return {\n            ...acc,\n            [valHQ]: acc[valHQ] ? [...acc[valHQ] , ...countriesValVCs].filter(onlyUnique) : countriesValVCs\n        };\n    });\n\n    const vcsByCountryKeys = Object.keys(vcsByCountry);\n    let vcsByCountryForTreemap = vcsByCountryKeys.map(key => {\n        const countryKeys = Object.keys(vcsByCountry[key]);\n        return {\n            name: key,\n            parent: \"Origin\",\n            value: vcsByCountry[key].length,\n            vcs: vcsByCountry[key]\n        }\n    });\n    vcsByCountryForTreemap = [{name: \"Origin\", parent: \"\", value: \"\" }, ...vcsByCountryForTreemap];\n    console.log(\"VCS By Country\",vcsByCountry);\n    console.log(\"VCS By Country Treemap\",vcsByCountryForTreemap);\n    return vcsByCountryForTreemap;\n}","import React, {useContext, useEffect, useRef, useState} from \"react\";\nimport * as d3 from \"d3\";\nimport d3Tip from \"d3-tip\";\nimport {BootcampAppContext} from \"../../Shared/AppSession/app-context\";\nimport {getAllVcsByCountry} from \"./treemap-utils\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst BootCampFinalProjectStartupTreemapChart = () => {\n    const { startupDir } = useContext(BootcampAppContext);\n    const [data, setData] = useState(() => []);\n    const [isMounted, setIsMounted] = useState(() => false);\n    const treemapChart = useRef();\n    useEffect(() => {\n        if(!isMounted) {\n            setIsMounted(true);\n        }\n    },[data]);\n    useEffect(() => {\n        if(startupDir.startups) {\n            const { startups } = startupDir;\n            const vcsByCountry = getAllVcsByCountry(startups);\n            setData(vcsByCountry);\n        }\n    },[startupDir]);\n    useEffect(() => {\n        if(d3.select(\"#svgCanvas2\")) {\n            d3.select(\"#svgCanvas2\").remove();\n        }\n        if(isMounted && Object.keys(data).length > 0) {\n            // console.log(\"Data\",data);\n            const svgHeight = treemapChart.current.clientHeight;\n            const svgWidth = treemapChart.current.clientWidth;\n            const margin = {\n                top: 10,\n                bottom: 10,\n                left: 20,\n                right: 20\n            };\n            const svg = d3\n                .select(treemapChart.current)\n                .append(\"svg\")\n                .attr(\"id\",\"svgCanvas2\")\n                .attr(\"viewBox\", `0 0 ${svgWidth} ${svgHeight}`);\n            const chartWidth = d3.select(\"#svgCanvas2\").node().getBoundingClientRect().width - margin.left - margin.right;\n            const chartHeight = svgHeight - margin.top - margin.bottom;\n            const chart = svg\n                .append(\"g\")\n                .attr(\"id\",\"treemap-chart\")\n                .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n                console.log(\"Dataset\",data);\n                const root = d3.stratify()\n                    .id((d, idx) => {\n                        return d.name\n                    })\n                    .parentId((d) => d.parent)\n                    (data);\n                root.sum((d) => d.value < 10 ? +d.value*3 : +d.value);\n                d3.treemap()\n                    .size([chartWidth,chartHeight])\n                (root);\n\n            const tooltip = d3Tip()\n                .attr(\"class\",\"tooltip\")\n                .style(\"background-color\",\"rgb(36,36,36)\")\n                .style(\"font-size\",\"12px\")\n                .style(\"font-family\",\"Open Sans\")\n                .style(\"padding\",\"8px\")\n                .style(\"color\",\"white\")\n                .style(\"max-width\",\"400px\")\n                .style(\"min-width\",\"100px\")\n                .style(\"height\",\"auto\")\n                .style(\"text-align\",\"center\")\n                .style(\"border\",\"1px solid rgba(72,137,247,0.6)\")\n                .offset([0,0])\n                .html(d => {\n                    console.log(\"D\",d)\n                    return `<div>\n                        <h3>${d.data.name}</h3>\n                        <h4>Venture Capitals</h4>\n                        <p>${d.data.vcs.join(\", \")}</p>\n                    </div>`\n                });\n\n                chart\n                    .selectAll(\"rect\")\n                    .data(root.leaves())\n                    .enter()\n                    .append(\"rect\")\n                    .classed(\"startup-rect\",true)\n                    .attr(\"x\", (d) => d.x0)\n                    .attr(\"y\", (d) => d.y0)\n                    .attr(\"width\",(d) => d.x1 - d.x0)\n                    .attr(\"height\",(d) => d.y1 - d.y0)\n                    .attr(\"fill\",\"rgba(72,137,247,0.6)\")\n                    .attr(\"stroke\",\"rgb(72,137,247)\")\n                    .attr(\"stroke-width\",\"3\")\n                    .style(\"cursor\",\"pointer\")\n                    .on(\"mouseover\",tooltip.show)\n                    .on(\"mouseout\",tooltip.hide);\n                chart\n                    .selectAll(\"text\")\n                    .data(root.leaves())\n                    .enter()\n                    .append(\"text\")\n                        .attr(\"x\",(d) => d.x0+10)\n                        .attr(\"y\",(d) => d.y0+20)\n                        .text((d) => d.data.value > 10 ? d.data.name : \"\")\n                        .attr(\"font-size\",\"15px\")\n                        .attr(\"fill\",\"white\");\n                chart.call(tooltip);\n        }\n    },[data]);\n    return <div id=\"vcs-treemap-chart\" style={{position: \"relative\", height: \"100%\", backgroundColor: \"rgb(36,36,36)\"}} ref={treemapChart} />;\n};\n\nexport default BootCampFinalProjectStartupTreemapChart;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    colorPrimary: {\n        backgroundColor: \"rgb(72, 137, 247)\"\n    },\n    colorInherit: {\n        color: \"white\"\n    }\n}));\n\nconst ButtonAppBar = ({toggleDrawer}) => {\n    const classes = useStyles();\n    const handleDrawer = (status) => {\n        toggleDrawer(status);\n    };\n    return (\n        <div className={classes.root} style={{backgroundColor: \"orange\"}}>\n            <AppBar position=\"static\" className={classes.colorPrimary}>\n                <Toolbar>\n                    <Button onClick={() => handleDrawer(true)}>\n                    <IconButton  edge=\"start\" className={`${classes.menuButton} ${classes.colorInherit}`} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    </Button>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Bootcamp Final Project\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default ButtonAppBar;","import React, {useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport ButtonAppBar from \"./appbar\";\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n});\nconst BootcampFinalProjectMenuDrawer = () => {\n    const classes = useStyles();\n    const [open, setOpen] = useState(() => false);\n\n    const toggleDrawer = (status) => (event) => {\n        setOpen(status);\n    };\n\n    const list = () => (\n        <div\n            onClick={toggleDrawer(false)}\n            onKeyDown={toggleDrawer(false)}\n        >\n            <List>\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n            <Divider />\n            <List>\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <div>\n            <ButtonAppBar toggleDrawer={setOpen} />\n            <Drawer anchor={\"left\"} open={open} onClose={toggleDrawer(false)}>\n                {list()}\n            </Drawer>\n        </div>\n    );\n};\n\nexport default BootcampFinalProjectMenuDrawer;\n","import React, {useContext, useEffect, useState} from 'react';\nimport './App.css';\nimport BootcampFinalProjectMap from \"./Components/Map/map\";\nimport BootcampFinalProjectStartupTypePieChart from \"./Components/PieChart/pie\";\nimport BootCampFinalProjectStartupTreemapChart from \"./Components/TreemapChart/treemap\";\nimport BootcampFinalProjectMenuDrawer from \"./Shared/Menu/menu\";\nimport {BootcampAppContext} from \"./Shared/AppSession/app-context\";\nimport Grid from \"@material-ui/core/Grid\";\n\nfunction App() {\n    const { getStartupDirs } = useContext(BootcampAppContext);\n    const [dataFetched, setDataFetched] = useState(() => false);\n    useEffect(() => {\n        if(!dataFetched) {\n            getStartupDirs();\n            setDataFetched(true);\n        }\n    },[dataFetched, getStartupDirs, setDataFetched])\n  return (\n    <div className=\"App\" style={{backgroundColor: \"rgb(36, 36, 36)\", height: \"100vh\"}}>\n        <Grid container spacing={0} style={{height: \"100%\"}}>\n            <Grid item xs={12}>\n                <BootcampFinalProjectMenuDrawer />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <div style={{padding: \"20px\", backgroundColor: \"rgb(36, 36, 36)\", height: \"100%\"}}>\n                <BootcampFinalProjectMap />\n                </div>\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <Grid item xs={12} style={{height: \"48%\"}}>\n                    <BootcampFinalProjectStartupTypePieChart />\n                </Grid>\n                <Grid item xs={12} style={{height: \"52%\", marginTop: \"40px\"}}>\n                    <BootCampFinalProjectStartupTreemapChart />\n                </Grid>\n            </Grid>\n        </Grid>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport BootcampFinalProjectContextProvider from \"./Shared/AppSession/app-context\";\n\nReactDOM.render(\n  // <React.StrictMode>\n      <BootcampFinalProjectContextProvider>\n         <App />\n      </BootcampFinalProjectContextProvider>,\n// </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}